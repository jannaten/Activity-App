{"version":3,"sources":["components/styles.js","components/header/header.component.jsx","redux/weather/weather.state.js","constant.js","redux/weather/weather.types.js","redux/weather/weather.reducer.js","redux/activities/activities.state.js","redux/activities/activities.types.js","redux/activities/activities.utils.js","redux/activities/activities.reducer.js","redux/weather/weather.utils.js","redux/activities/activities.action.js","components/Weather/weather.component.jsx","redux/weather/weather.action.js","components/Archrive/archrive.component.jsx","components/Menu-List/menu-list.component.jsx","components/Form-Input/form-input.component.jsx","utils/descripionData.js","utils/descriptionHolder.js","components/Suggestion/suggestion.component.jsx","components/Mobile-List/mobile-list.component.jsx","components/Custom-Button/custom-button.component.jsx","components/Notifications/notifications.component.jsx","components/List-Drop-Down/list-drop-down.component.jsx","components/Active-Activities/activeActivities.component.jsx","utils/setModal.jsx","components/Edit-Activity-Modal/editActivityModal.component.jsx","components/Loader/loader.component.jsx","screen/Dashboard/dashBoard.jsx","screen/styles.js","screen/CheckActivities/tableHeader.js","screen/CheckActivities/checkActivities.jsx","screen/CreateActivities/createActivities.jsx","App.js","serviceWorker.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["customButtonHolder","display","flexDirection","buttonSpace","marginRight","listStyle","textAlign","background","marginBotton","padding","color","cursor","listSet","position","right","top","menuListStyle","paddingRight","navStyle","alignItems","gridTemplateColumns","menuStyle","justifyContent","Header","useState","window","matchMedia","matches","isMobile","setIsMobile","useEffect","addEventListener","className","style","HeaderStyle","to","pathname","initState","API_KEY","visible","light","isPending","givenCityName","weatherReport","weatherStatus","basicWeatherData","defaultCity","WeatherActionTypes","weatherReducer","state","action","type","TYPES","payload","target","value","name","preventDefault","val","icon","includes","mainTemp","main","weather","alert","setId","setName","setCompleted","setValidTime","showModal","notifiedItem","activitiesActive","activitiesNonActive","timeSet","Date","getHours","getMinutes","activities","id","uuid","completed","Number","split","NaN","ActivitiesActionTypes","afterDeleteActivityArray","filter","el","afterDeleteActiveActivityArray","afterDeleteNonActiveActivityArray","editedArrayOne","getValue","windowTime","map","ac","editedArrayTwo","getfilteredArr","arrayActiveObject","push","undefined","getfilteredArray","arrayNonActiveObject","items","destination","source","Array","from","splice","index","reorderedItem","checkItems","checkReorderedItem","activitiesReducer","getWindowTime","totalWindowTime","setTime","obj","modifedArray","modifiedActive","getArchriveItem","newArr","filteredArr","decresedTimeArr","getNotifiedItem","nA","getFilteredNotifiedItem","nonActiveArr","getTheWindowTime","fetchUrl","handleChange","toggleModal","connect","dispatch","changeWeather","handleWeatherChange","temp","temp_min","temp_max","humidity","pressure","feels_like","toFixed","description","label","required","onClick","key","MenuList","MenuListHolder","FormInput","otherProps","onChange","length","data","descripion","listItems","descriptionHolder","desc","Fragment","li","Suggestions","setTimeout","props","toggleVisible","pP","pS","PP","this","toggleLight","src","alt","toLowerCase","React","Component","MobileList","active","setActive","ListStyle","CustomButton","children","notice","ListDropDown","ListHolder","sortActivities","setArchriveActivities","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Math","abs","placeholder","location","reload","Modal","customClass","show","closeCallback","title","defaultProps","modal","handleUpdate","change","ButtonStyle","Loader","width","height","version","xmlns","d","DashBoard","getActiveActivities","sortActiveActivities","getNonActiveActivities","sortNonActiveActivities","setInterval","setDecrementMinutes","mountWeather","SS","setDefined","city","a","axios","get","response","LineThrogh","textDecoration","Container","listChildOne","opacity","borderRadius","listChildTwo","ButtonRoundStyle","border","TableHeader","activity","deleteActivity","sortCheckActivities","ActivityStyle","CreateActivity","addActivities","event","App","exact","path","component","CheckActivity","Boolean","hostname","match","combineReducers","middleware","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+YAAe,GACbA,mBAAoB,CAClBC,QAAS,OACTC,cAAe,OAEjBC,YAAa,CAAEC,YAAa,QAC5BC,UAAW,CACTC,UAAW,UACXC,WAAY,QACZC,aAAc,MACdC,QAAS,MACTC,MAAO,QACPC,OAAQ,WAEVC,QAAS,CACPC,SAAU,WACVC,MAAO,MACPC,IAAK,MACLV,UAAW,QAEbW,cAAe,CAAEV,UAAW,OAAQW,aAAc,OAAQN,OAAQ,WAClEO,SAAU,CACRjB,QAAS,OACTkB,WAAY,SACZC,oBAAqB,WAEvBC,UAAW,CACTpB,QAAS,OACTI,UAAW,OACXY,aAAc,OACdK,eAAgB,kBCFLC,G,MAvBA,WAAO,IAAD,EACaC,mBAC9BC,OAAOC,WAAW,uBAAuBC,SAFxB,mBACZC,EADY,KACFC,EADE,KAWnB,OANAC,qBAAU,WACRL,OAAOM,iBAAiB,UAAU,WAChCF,EAAYJ,OAAOC,WAAW,uBAAuBC,eAKvD,yBAAKK,UAAU,UAAUC,MAAOC,EAAYhB,UAC1C,kBAAC,IAAD,CAAMiB,GAAI,CAAEC,SAAU,mBACpB,gCACE,0BAAMJ,UAAU,UAAhB,cAGHJ,EAAW,kBAAC,GAAD,MAAiB,kBAAC,GAAD,CAAUK,MAAOC,EAAYb,e,sBCrBnDgB,EAAY,CACvBC,QCFqB,mCDGrBC,SAAS,EACTC,MAAO,QACPC,WAAW,EACXC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,iBAAkB,GAClBC,YCX0B,WCAfC,EAEG,eAFHA,EAGI,gBAHJA,EAIK,iBAJLA,EAKK,iBALLA,EAMa,yBANbA,EAOc,0BAPdA,EAQc,0BCiDZC,EAtDQ,WAAgC,IAA/BC,EAA8B,uDAAtBZ,EAAWa,EAAW,uCACpD,OAAQA,EAAOC,MAEb,KAAKC,EAAL,MAC0BF,EAAOG,QAAQC,OAA/BC,EADV,EACUA,MAAOC,EADjB,EACiBA,KACf,OAAO,2BAAKP,GAAZ,kBAAoBO,EAAOD,IAG7B,KAAKH,EACHF,EAAOG,QAAQI,iBACf,IAAMC,EAAMT,EAAMP,cAClB,OAAO,2BAAKO,GAAZ,IAAmBH,YAAaY,EAAKhB,cAAe,KAGtD,KAAKU,EACH,OAAO,2BAAKH,GAAZ,IAAmBV,SAAS,IAG9B,KAAKa,EACH,OAAIH,EAAML,cAAce,KAAKC,SAAS,KAC7B,2BAAKX,GAAZ,IAAmBT,MAAO,QACjBS,EAAML,cAAce,KAAKC,SAAS,KACpC,2BAAKX,GAAZ,IAAmBT,MAAO,UAEnB,2BAAKS,GAAZ,IAAmBT,MAAO,KAI9B,KAAKY,EACH,OAAO,2BAAKH,GAAZ,IAAmBR,WAAW,IAGhC,KAAKW,EACH,IAAMS,EAAWX,EAAOG,QAAQS,KAC1BlB,EAAgBM,EAAOG,QAAQU,QAAQ,GAC7C,OAAO,2BACFd,GADL,IAEEL,gBACAH,WAAW,EACXI,iBAAkBgB,EAClBlB,cAAeO,EAAOG,UAI1B,KAAKD,EAEH,OADAY,MAAM,sBACC,2BAAKf,GAAZ,IAAmBR,WAAW,IAGhC,QACE,OAAOQ,I,gBCnDAZ,EAAY,CACvB4B,MAAO,GACPC,QAAS,GACTC,aAAc,GACdC,aAAc,GACdC,WAAW,EACXC,aAAc,GACdC,iBAAkB,GAClBC,oBAAqB,GACrBC,SAAS,IAAIC,MAAOC,WAAa,KAAM,IAAID,MAAOE,aAClDC,WAAY,CACV,CACEC,GAAIC,cACJvB,KAAM,UACNwB,WAAW,EACXP,QACkC,GAAhCQ,OAAO,QAAQC,MAAM,KAAK,IAAWD,OAAO,QAAQC,MAAM,KAAK,KAEnE,CAAEJ,GAAIC,cAAQvB,KAAM,UAAWwB,WAAW,EAAMP,QAASU,KACzD,CACEL,GAAIC,cACJvB,KAAM,WACNwB,WAAW,EACXP,QACkC,GAAhCQ,OAAO,QAAQC,MAAM,KAAK,IAAWD,OAAO,QAAQC,MAAM,KAAK,OC1B1DE,EACE,cADFA,EAEG,eAFHA,EAGI,gBAHJA,EAIK,iBAJLA,EAKM,kBALNA,EAMM,kBANNA,EAOM,kBAPNA,EAQU,sBARVA,EASa,yBATbA,EAUa,yBAVbA,EAWc,0BAXdA,EAYgB,4BCZhBC,EAA2B,SAACpC,EAAOC,GAAR,OACtCD,EAAM4B,WAAWS,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAO5B,EAAOG,YAEtCmC,EAAiC,SAACvC,EAAOC,GAAR,OAC5CD,EAAMsB,iBAAiBe,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAO5B,EAAOG,YAE5CoC,EAAoC,SAACxC,EAAOC,GAAR,OAC/CD,EAAMuB,oBAAoBc,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAO5B,EAAOG,YAE/CqC,EAAiB,SAACzC,EAAO0C,EAAUvB,EAAcwB,GAAhC,OAC5B3C,EAAM4B,WAAWgB,KAAI,SAACC,GAMpB,OALIA,EAAGhB,KAAOa,EAASb,KAAuB,IAAjBgB,EAAGd,YAC9Bc,EAAGtC,KAAOmC,EAASnC,KACnBsC,EAAGd,UAAYW,EAASX,UACxBc,EAAGrB,QAAUL,EAAewB,GAEvBE,MAGEC,EAAiB,SAAC9C,EAAO0C,GAAR,OAC5B1C,EAAM4B,WAAWgB,KAAI,SAACC,GAMpB,OALIA,EAAGhB,KAAOa,EAASb,KAAuB,IAAjBgB,EAAGd,YAC9Bc,EAAGtC,KAAOmC,EAASnC,KACnBsC,EAAGd,UAAYW,EAASX,UACxBc,EAAGrB,QAAUU,KAERW,MAGEE,EAAiB,SAAC/C,GAC7B,IAAIgD,EAAoB,GACxBhD,EAAM4B,WAAWgB,KAAI,SAACC,GACpB,OAAqB,IAAjBA,EAAGd,UACEiB,EAAkBC,KAAlB,2BAA4BJ,GAA5B,IAAgCrB,QAASqB,EAAGrB,WAE9CwB,KAET,IAAID,EAAiBC,EAAkBX,QAAO,SAACQ,GAAD,YAAeK,IAAPL,KACtD,OAAOE,GAGII,EAAmB,SAACnD,GAC/B,IAAIoD,EAAuB,GAC3BpD,EAAM4B,WAAWgB,KAAI,SAACC,GACpB,OAAqB,IAAjBA,EAAGd,UACEqB,EAAqBH,KAArB,eAA+BJ,IAEjCO,KAET,IAAID,EAAmBC,EAAqBf,QAAO,SAACQ,GAAD,YAAeK,IAAPL,KAC3D,OAAOM,GAGIE,EAAQ,SAACpD,EAAQD,GAAW,IAAD,EACNC,EAAOG,QAA/BkD,EAD8B,EAC9BA,YAAaC,EADiB,EACjBA,OACrB,GAAKD,EAAL,CACA,IAAMD,EAAQG,MAAMC,KAAKzD,EAAMsB,kBAHO,EAId+B,EAAMK,OAAOH,EAAOI,MAAO,GAA5CC,EAJ+B,oBAMtC,OADAP,EAAMK,OAAOJ,EAAYK,MAAO,EAAGC,GAC5B,YAAIP,KAGAQ,EAAa,SAAC5D,EAAQD,GACjC,GAAKC,EAAOG,QAAQkD,YAApB,CACA,IAAMO,EAAaL,MAAMC,KAAKzD,EAAM4B,YAFO,EAGdiC,EAAWH,OACtCzD,EAAOG,QAAQmD,OAAOI,MACtB,GAFKG,EAHoC,oBAQ3C,OADAD,EAAWH,OAAOzD,EAAOG,QAAQkD,YAAYK,MAAO,EAAGG,GAChD,YAAID,KCkJEE,EA/MW,WAAgC,IAA/B/D,EAA8B,uDAAtBZ,EAAWa,EAAW,uCACvD,OAAQA,EAAOC,MAEb,KAAKC,EAAL,MAC0BF,EAAOG,QAAQC,OAA/BC,EADV,EACUA,MAAOC,EADjB,EACiBA,KACf,OAAO,2BAAKP,GAAZ,kBAAoBO,EAAOD,IAG7B,KAAKH,EACH,OAAO,2BAAKH,GAAZ,IAAmBsB,iBAAkByB,EAAe/C,KAGtD,KAAKG,EACH,OAAO,2BAAKH,GAAZ,IAAmBuB,oBAAqB4B,EAAiBnD,KAG3D,KAAKG,EACHF,EAAOG,QAAQI,iBADjB,IAEUS,EAAqBjB,EAArBiB,QAASO,EAAYxB,EAAZwB,QACbwC,EAAgB,IAAIvC,KACpBwC,EACyB,GAA3BD,EAActC,WAAkBsC,EAAcrC,aAC5CuC,EAC8B,GAAhClC,OAAOR,EAAQS,MAAM,KAAK,IAAWD,OAAOR,EAAQS,MAAM,KAAK,IACjE,GAAIiC,EAAUD,EAAiB,CAC7B,IAAIE,EAAM,CACRtC,GAAIC,cACJvB,KAAMU,EACNc,WAAW,EACXP,QAAS0C,EAAUD,GAErB,OAAO,2BACFjE,GADL,IAEEiB,QAAS,GACTO,QAAS,GACTI,WAAW,GAAD,mBAAM5B,EAAM4B,YAAZ,CAAwBuC,MAKtC,OAFEpD,MAAM,iCAED,eAAKf,GAGd,KAAKG,EACH,OAAO,2BACFH,GADL,IAEEsB,iBAAkB+B,EAAMpD,EAAQD,KAIpC,KAAKG,EACH,OAAO,2BACFH,GADL,IAEE4B,WAAYiC,EAAW5D,EAAQD,KAInC,KAAKG,EACH,QAAyB+C,IAArBlD,EAAM4B,iBAAiDsB,IAArBlD,EAAM4B,WAA0B,CACpE,IACIwC,EACAC,EAFAC,EAAkB,GAmCtB,OAhCAtE,EAAMsB,iBAAiBsB,KAAI,SAACC,GAC1B,GAAIA,EAAGhB,KAAO5B,EAAOG,QAAS,CAC5B,IAAI+D,EAAM,CACRtC,GAAIgB,EAAGhB,GACPL,QAASU,IACT3B,KAAMsC,EAAGtC,KACTwB,WAAW,GAEb,OAAOuC,EAAgBrB,KAAKkB,GAsB9B,OApBAC,EAAepE,EAAM4B,WAAWgB,KAAI,SAACC,GACnC,OAAIA,EAAGhB,KAAO5B,EAAOG,QACT,CACRyB,GAAIgB,EAAGhB,GACPL,QAASU,IACT3B,KAAMsC,EAAGtC,KACTwB,WAAW,GAIH,CACRF,GAAIgB,EAAGhB,GACPtB,KAAMsC,EAAGtC,KACTiB,QAASqB,EAAGrB,QACZO,UAAWc,EAAGd,cAKpBsC,EAAiBD,EAAa/B,QAAO,SAACC,GAAD,OAAyB,IAAjBA,EAAGP,aACzCc,KAEF,2BACF7C,GADL,IAEEuB,oBAAoB,GAAD,OACd+C,EADc,YAEdtE,EAAMuB,sBAEXK,WAAYwC,EACZ9C,iBAAkB+C,IAGtB,OAAO,eAAKrE,GAGd,KAAKG,EACH,IAAIoE,EAASvE,EAAMsB,iBAAiBsB,KAAI,SAACC,GACvC,OAAO,2BACFA,GADL,IAEErB,QAASqB,EAAGrB,QAAU,OAGtBgD,EAAcD,EAAOlC,QAAO,SAACQ,GAAD,YAAeK,IAAPL,KACpC4B,EAAe,sBAAOF,GAAP,YAAkBvE,EAAMuB,sBACvCmD,EAAkB,GACtBH,EAAO3B,KAAI,SAAC+B,GACV,OAAIA,EAAGnD,SAAW,EACTkD,EAAgBzB,KAAK0B,GAEvBD,KAET,IAAIE,EAA0BF,EAAgBrC,QAC5C,SAACQ,GAAD,YAAeK,IAAPL,IAAqC,IAAjBA,EAAGd,aAEjC,OAAO,2BACF/B,GADL,IAEE4B,WAAY6C,EACZnD,iBAAkBkD,EAClBnD,aAAcuD,IAIlB,KAAKzE,EACH,IAAI0E,EAAe7E,EAAMuB,oBACzB,OAAO,2BAAKvB,GAAZ,IAAmBsB,iBAAkB,GAAIM,WAAYiD,IAGvD,KAAK1E,EACH,OAAO,2BACFH,GADL,IAEEiB,QAAS,GACTD,MAAOf,EAAOG,QAAQY,MACtBI,UAAWnB,EAAOG,QAAQgB,UAC1BF,aAAcjB,EAAOG,QAAQc,aAC7BC,aAAclB,EAAOG,QAAQe,eAIjC,KAAKhB,EACH,IAAI2E,EAAmB,IAAIrD,KACvBkB,EAC4B,GAA9BmC,EAAiBpD,WAAkBoD,EAAiBnD,aAClDR,EACoC,GAAtCa,OAAOhC,EAAMwB,QAAQS,MAAM,KAAK,IAChCD,OAAOhC,EAAMwB,QAAQS,MAAM,KAAK,IAC9BS,EAAWzC,EAAOG,QACtB,OACEe,GACkB,KAAlBuB,EAASnC,MACY,KAArBmC,EAASlB,SACTL,EAAewB,EAER,2BACF3C,GADL,IAEEgB,MAAO,GACPC,QAAS,GACTO,QAAS,GACTL,aAAc,EACdC,WAAW,EACXQ,WAAYa,EAAezC,EAAO0C,EAAUvB,EAAcwB,KAG3DxB,GACiB,KAAlBuB,EAASnC,MACY,KAArBmC,EAASlB,SAYTT,MAAM,iCAED,eAAKf,IAZH,2BACFA,GADL,IAEEgB,MAAO,GACPC,QAAS,GACTO,QAAS,GACTL,aAAc,EACdC,WAAW,EACXQ,WAAYkB,EAAe9C,EAAO0C,KAQxC,KAAKvC,EACH,OAAO,2BACFH,GADL,IAEE4B,WAAYQ,EAAyBpC,EAAOC,GAC5CqB,iBAAkBiB,EAA+BvC,EAAOC,GACxDsB,oBAAqBiB,EAAkCxC,EAAOC,KAIlE,QACE,OAAOD,ICpNA+E,EAAW,SAAClF,EAAaR,GAAd,kEAC+BQ,EAD/B,kBACoDR,ICoB/D2F,EAAe,SAAChF,GAAD,MAAY,CACtCE,KAAMC,EACNC,QAASJ,IAoBEiF,EAAc,SAACjF,GAAD,MAAY,CACrCE,KAAMC,EACNC,QAASJ,I,6CCkCIkF,gBAxBS,SAAC,GAAD,QACtBpE,QADsB,MASjB,CACLtB,UAVsB,EAEpBA,UASFK,YAXsB,EAGpBA,YASFJ,cAZsB,EAIpBA,cASFC,cAbsB,EAKpBA,cASFC,cAdsB,EAMpBA,cASFC,iBAfsB,EAOpBA,qBAYuB,SAACuF,GAAD,MAAe,CACxCC,cAAe,SAACtE,GAAD,OAAaqE,EClEW,CACvCjF,KAAMC,EACNC,QDgEmDU,KACnDuE,oBAAqB,SAACvE,GAAD,OAAaqE,ECxEW,CAC7CjF,KAAMC,EACNC,QDsE+DU,QAGlDoE,EA1EC,SAAC,GAQV,IAPL1F,EAOI,EAPJA,UACAE,EAMI,EANJA,cACAC,EAKI,EALJA,cACAF,EAII,EAJJA,cACA2F,EAGI,EAHJA,cACAxF,EAEI,EAFJA,iBACAyF,EACI,EADJA,oBAGEC,EAME1F,EANF0F,KACAC,EAKE3F,EALF2F,SACAC,EAIE5F,EAJF4F,SACAC,EAGE7F,EAHF6F,SACAC,EAEE9F,EAFF8F,SACAC,EACE/F,EADF+F,WAEMpF,EAASb,EAATa,KACR,OACE,oCACIf,EAuBA,kBAAC,GAAD,MAtBA,oCACE,0CACce,EADd,OACwB+E,EAAO,KAAKM,QAAQ,GAD5C,UAGA,4CAAkBD,EAAa,KAAKC,QAAQ,GAA5C,UACA,yCAAeH,GACf,yCAAeC,GACf,0CAAgBF,EAAW,KAAKI,QAAQ,GAAxC,UACA,0CAAgBL,EAAW,KAAKK,QAAQ,GAAxC,UACA,6CAAmBjG,EAAckG,aAEjC,kBAAC,GAAD,CACE3F,KAAK,OACLK,KAAK,gBACLD,MAAOb,EACPuF,aAAcK,EACdS,MAAK,6BACLC,UAAQ,IAEV,kBAAC,GAAD,CAAcC,QAASZ,GAAvB,eEpBKF,gBAJS,SAAC,GAAD,MAA8C,CACpE3D,oBADsB,EAAGK,WAAcL,uBAI1B2D,EAtBE,SAAC,GAAD,IAAG3D,EAAH,EAAGA,oBAAH,OACf,oCACE,uCACA,6BACGA,EAAoBqB,KAAI,SAACC,GAAD,OACvB,yBAAKoD,IAAKpD,EAAGhB,IACVgB,EAAGd,UACF,6BACE,2BAAIc,EAAGtC,KAAP,yBAEA,cCMC2F,GAhBE,SAAC,GAAe,IAAblH,EAAY,EAAZA,MAClB,OACE,wBAAIA,MAAOA,GACT,kBAAC,IAAD,CAAME,GAAI,CAAEC,SAAU,mBACpB,wBAAIH,MAAOmH,EAAepI,eAA1B,cAEF,kBAAC,IAAD,CAAMmB,GAAI,CAAEC,SAAU,yBACpB,wBAAIH,MAAOmH,EAAepI,eAA1B,sBAEF,kBAAC,IAAD,CAAMmB,GAAI,CAAEC,SAAU,wBACpB,wBAAIH,MAAOmH,EAAepI,eAA1B,2B,SCKOqI,I,MAfG,SAAC,GAAD,IAAGpB,EAAH,EAAGA,aAAcc,EAAjB,EAAiBA,MAAUO,EAA3B,gDAChB,yBAAKtH,UAAU,SACb,yCAAOA,UAAU,aAAauH,SAAUtB,GAAkBqB,IACzDP,EACC,2BACE/G,UAAS,UACPsH,EAAW/F,MAAMiG,OAAS,SAAW,GAD9B,sBAIRT,GAED,Q,oCCbKU,GAAO,CAClB,CACE3E,GAAIC,cACJ2E,WAAY,YACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,qBACrB,CAAExB,GAAIC,cAAQuB,MAAO,iCAGzB,CACExB,GAAIC,cACJ2E,WAAY,gBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,6BACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCACrB,CAAExB,GAAIC,cAAQuB,MAAO,iCAGzB,CACExB,GAAIC,cACJ2E,WAAY,aACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,sBACrB,CAAExB,GAAIC,cAAQuB,MAAO,8BACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,cACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,2BACrB,CAAExB,GAAIC,cAAQuB,MAAO,iCAGzB,CACExB,GAAIC,cACJ2E,WAAY,OACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,uBACrB,CAAExB,GAAIC,cAAQuB,MAAO,iCAGzB,CACExB,GAAIC,cACJ2E,WAAY,eACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oBACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,OACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,+BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,yBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,8BACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,+BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,qBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,kCACrB,CAAExB,GAAIC,cAAQuB,MAAO,2CAGzB,CACExB,GAAIC,cACJ2E,WAAY,qBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,kCACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,sBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,mCACrB,CAAExB,GAAIC,cAAQuB,MAAO,sBAGzB,CACExB,GAAIC,cACJ2E,WAAY,kCACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,uCACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,4BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,iCACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,kCACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,uCACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,0BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,8CACrB,CAAExB,GAAIC,cAAQuB,MAAO,yBAGzB,CACExB,GAAIC,cACJ2E,WAAY,UACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,wBACrB,CAAExB,GAAIC,cAAQuB,MAAO,6BAGzB,CACExB,GAAIC,cACJ2E,WAAY,0BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,8CACrB,CAAExB,GAAIC,cAAQuB,MAAO,kDAGzB,CACExB,GAAIC,cACJ2E,WAAY,+BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oDACrB,CAAExB,GAAIC,cAAQuB,MAAO,4BAGzB,CACExB,GAAIC,cACJ2E,WAAY,eACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,mCACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,+BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oDACrB,CAAExB,GAAIC,cAAQuB,MAAO,8BAGzB,CACExB,GAAIC,cACJ2E,WAAY,0BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,iCACrB,CAAExB,GAAIC,cAAQuB,MAAO,0BAGzB,CACExB,GAAIC,cACJ2E,WAAY,gCACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,uCACrB,CAAExB,GAAIC,cAAQuB,MAAO,mDAGzB,CACExB,GAAIC,cACJ2E,WAAY,iBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,8BACrB,CAAExB,GAAIC,cAAQuB,MAAO,iCAGzB,CACExB,GAAIC,cACJ2E,WAAY,aACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,sBACrB,CAAExB,GAAIC,cAAQuB,MAAO,0CAGzB,CACExB,GAAIC,cACJ2E,WAAY,gBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,sCACrB,CAAExB,GAAIC,cAAQuB,MAAO,0CAGzB,CACExB,GAAIC,cACJ2E,WAAY,uBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,2BAGzB,CACExB,GAAIC,cACJ2E,WAAY,kBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,2BAGzB,CACExB,GAAIC,cACJ2E,WAAY,eACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,iCACrB,CAAExB,GAAIC,cAAQuB,MAAO,2BAGzB,CACExB,GAAIC,cACJ2E,WAAY,gBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,yCACrB,CAAExB,GAAIC,cAAQuB,MAAO,mDAGzB,CACExB,GAAIC,cACJ2E,WAAY,8BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,yCACrB,CAAExB,GAAIC,cAAQuB,MAAO,6CAGzB,CACExB,GAAIC,cACJ2E,WAAY,cACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,gCACrB,CAAExB,GAAIC,cAAQuB,MAAO,6CAGzB,CACExB,GAAIC,cACJ2E,WAAY,8BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,4CACrB,CAAExB,GAAIC,cAAQuB,MAAO,+BAGzB,CACExB,GAAIC,cACJ2E,WAAY,qBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,uCACrB,CAAExB,GAAIC,cAAQuB,MAAO,oCAGzB,CACExB,GAAIC,cACJ2E,WAAY,aACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,0BACrB,CAAExB,GAAIC,cAAQuB,MAAO,kCAGzB,CACExB,GAAIC,cACJ2E,WAAY,OACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,4BACrB,CAAExB,GAAIC,cAAQuB,MAAO,wCAGzB,CACExB,GAAIC,cACJ2E,WAAY,aACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,0BACrB,CAAExB,GAAIC,cAAQuB,MAAO,wCAGzB,CACExB,GAAIC,cACJ2E,WAAY,QACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,4BACrB,CAAExB,GAAIC,cAAQuB,MAAO,2CAGzB,CACExB,GAAIC,cACJ2E,WAAY,qBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,sCACrB,CAAExB,GAAIC,cAAQuB,MAAO,wCAGzB,CACExB,GAAIC,cACJ2E,WAAY,eACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,kCACrB,CAAExB,GAAIC,cAAQuB,MAAO,2CAGzB,CACExB,GAAIC,cACJ2E,WAAY,sBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,sCACrB,CAAExB,GAAIC,cAAQuB,MAAO,yCAGzB,CACExB,GAAIC,cACJ2E,WAAY,gBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,qCACrB,CAAExB,GAAIC,cAAQuB,MAAO,8CAGzB,CACExB,GAAIC,cACJ2E,WAAY,oBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,uCAGzB,CACExB,GAAIC,cACJ2E,WAAY,cACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,2BACrB,CAAExB,GAAIC,cAAQuB,MAAO,uCAGzB,CACExB,GAAIC,cACJ2E,WAAY,oBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,6CAGzB,CACExB,GAAIC,cACJ2E,WAAY,QACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,qBACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,OACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,qBACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,oBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,2BACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,MACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,2BACrB,CAAExB,GAAIC,cAAQuB,MAAO,uCAGzB,CACExB,GAAIC,cACJ2E,WAAY,OACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,4BACrB,CAAExB,GAAIC,cAAQuB,MAAO,iDAGzB,CACExB,GAAIC,cACJ2E,WAAY,OACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,4BACrB,CAAExB,GAAIC,cAAQuB,MAAO,8BAGzB,CACExB,GAAIC,cACJ2E,WAAY,eACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,+BACrB,CAAExB,GAAIC,cAAQuB,MAAO,oCAGzB,CACExB,GAAIC,cACJ2E,WAAY,UACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,6CACrB,CAAExB,GAAIC,cAAQuB,MAAO,2BAGzB,CACExB,GAAIC,cACJ2E,WAAY,UACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,8BACrB,CAAExB,GAAIC,cAAQuB,MAAO,4CAGzB,CACExB,GAAIC,cACJ2E,WAAY,qBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,qCACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,2BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,uCACrB,CAAExB,GAAIC,cAAQuB,MAAO,qCAGzB,CACExB,GAAIC,cACJ2E,WAAY,wBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,oCACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,2BACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,+BACrB,CAAExB,GAAIC,cAAQuB,MAAO,mCAGzB,CACExB,GAAIC,cACJ2E,WAAY,kBACZC,UAAW,CACT,CAAE7E,GAAIC,cAAQuB,MAAO,wBACrB,CAAExB,GAAIC,cAAQuB,MAAO,oCC3cZsD,OAlBf,YAAsC,IAATC,EAAQ,EAARA,KAC3B,OACE,oCACGJ,GAAK5D,KAAI,gBAAGf,EAAH,EAAGA,GAAI4E,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,UAAnB,OACR,kBAAC,IAAMG,SAAP,CAAgBZ,IAAKpE,GAClB+E,IAASH,EACR,4BACGC,EAAU9D,KAAI,SAACkE,GAAD,OACb,wBAAIb,IAAKa,EAAGjF,IAAKiF,EAAGzD,WAGtB,WCVR0D,G,sLACiB,IAAD,OAClBC,YAAW,WACT,EAAKC,MAAMC,kBACV,O,yCAGcC,EAAIC,EAAIC,GACrBF,EAAGxH,cAAce,OAAS4G,KAAKL,MAAMtH,cAAce,MACrD4G,KAAKL,MAAMM,gB,+BAIL,IAAD,EACmCD,KAAKL,MAAvC3H,EADD,EACCA,QAASK,EADV,EACUA,cAAeJ,EADzB,EACyBA,MAChC,OACE,yCACiC2D,IAA9BvD,EAAckG,YACb,oCACE,2CACCvG,EACC,oCACE,yBACEN,MAAO,CACLhC,QAAS,OACTC,cAAe,MACfiB,WAAY,WAGd,yBACEsJ,IAAG,2CAAsC7H,EAAce,KAApD,WACH+G,IAAI,KAEN,4BAAK9H,EAAckG,aAXrB,IAWwC,IACrClG,EAAgB,gCAAMJ,EAAN,KAAqB,KAZxC,KAcA,kBAAC,GAAD,CACEqH,KAAMjH,EAAckG,YAAY6B,iBAIpC,6DAGF,U,GA5CcC,IAAMC,WA+DjB1C,gBAZS,SAAC,GAAD,QAAGpE,QAAH,MAAqD,CAC3EvB,MADsB,EAAcA,MAEpCD,QAFsB,EAAqBA,QAG3CK,cAHsB,EAA8BA,kBAO3B,SAACwF,GAAD,MAAe,CACxCoC,YAAa,kBAAMpC,ENzCa,CAChCjF,KAAMC,KMyCN+G,cAAe,kBAAM/B,EN9Ca,CAClCjF,KAAMC,QMgDO+E,CAA6C6B,IC9C7Cc,GAlBI,WAAO,IAAD,EACKtJ,oBAAS,GADd,mBAChBuJ,EADgB,KACRC,EADQ,KAEvB,OACE,oCACE,kBAAC,GAAD,CACE/B,QAAS,WACP+B,GAAWD,KAGZA,EAAS,IAAM,KAEjBA,GACC,kBAAC,GAAD,CAAc9I,MAAOgJ,EAAUrK,QAASoK,UAAWA,MCP5CE,I,MANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAa7B,EAAhB,oCACnB,0CAAQtH,UAAU,iBAAoBsH,GACnC6B,KCsBUhD,gBAJS,SAAC,GAAD,MAAuC,CAC7D7D,aADsB,EAAGO,WAAcP,gBAI1B6D,EAxBO,SAAC,GAAD,IAAG7D,EAAH,EAAGA,aAAH,OACpB,oCACE,6CACyB,IAAxBA,EAAakF,OACZ,8DAEAlF,EAAakF,QAAU,GACvBlF,EAAauB,KAAI,SAACuF,GAChB,YAAejF,IAAXiF,EAEA,uBAAGlC,IAAKkC,EAAOtG,IAAf,aAA8BsG,EAAO5H,KAArC,qBAGG4H,SCUAC,GAtBM,SAAC,GAA0B,IAAxBpJ,EAAuB,EAAvBA,MAAO+I,EAAgB,EAAhBA,UAC7B,OACE,wBAAI/I,MAAOA,GACT,kBAAC,IAAD,CAAME,GAAI,CAAEC,SAAU,mBACpB,wBAAIH,MAAOqJ,EAAWjL,UAAW4I,QAAS,kBAAM+B,GAAU,KAA1D,cAIF,kBAAC,IAAD,CAAM7I,GAAI,CAAEC,SAAU,yBACpB,wBAAIH,MAAOqJ,EAAWjL,UAAW4I,QAAS,kBAAM+B,GAAU,KAA1D,sBAIF,kBAAC,IAAD,CAAM7I,GAAI,CAAEC,SAAU,wBACpB,wBAAIH,MAAOqJ,EAAWjL,UAAW4I,QAAS,kBAAM+B,GAAU,KAA1D,2B,SC8EO7C,gBAXS,SAAC,GAAD,MAA2C,CACjE5D,iBADsB,EAAGM,WAAcN,qBAKd,SAAC6D,GAAD,MAAe,CACxCmD,eAAgB,SAAC1G,GAAD,OAAgBuD,EbpFQ,CACxCjF,KAAMC,EACNC,QakFwDwB,KACxD2G,sBAAuB,SAAC3G,GAAD,OACrBuD,EbjF6C,CAC/CjF,KAAMC,EACNC,Qa+EiCwB,QAGpBsD,EAzFU,SAAC,GAAD,IACvBoD,EADuB,EACvBA,eACAhH,EAFuB,EAEvBA,iBACAiH,EAHuB,EAGvBA,sBAHuB,OAKvB,kBAAC,KAAD,CAAiBC,UAAW,SAAClI,GAAD,OAAWgI,EAAehI,KACpD,0DACsB4C,IAArB5B,EACC,oCACGA,EAAiBiF,OAAS,EACzB,kBAAC,KAAD,CAAWkC,YAAY,eACpB,SAACC,GAAD,OACC,yCAASA,EAASC,eAAlB,CAAkCC,IAAKF,EAASG,WAC7CvH,EAAiBsB,KAAI,SAACC,EAAIc,GAAW,IAC5B9B,EAAiCgB,EAAjChB,GAAItB,EAA6BsC,EAA7BtC,KAAMiB,EAAuBqB,EAAvBrB,QAASO,EAAcc,EAAdd,UAC3B,OACE,kBAAC,KAAD,CAAWkE,IAAKpE,EAAI8B,MAAOA,EAAOmF,YAAajH,IAC5C,SAAC6G,GAAD,OACC,uCACEzC,IAAKpE,EACL+G,IAAKF,EAASG,UACVH,EAASK,eACTL,EAASM,iBAEXjH,EA8BE,KA7BF,6BACE,4BAAKxB,GACJiB,GAAW,EACV,2BACGA,EAAS,IACG,IAAZA,GAA6B,IAAZA,EAChB,wCAEA,yCACC,IANL,SAUA,sCACWyH,KAAKC,IAAI1H,GAAU,IACL,IAAtByH,KAAKC,IAAI1H,GACR,wCAEA,yCACC,IANL,QAUF,kBAAC,GAAD,CACEwE,QAAS,kBAAMuC,EAAsB1G,KADvC,2BAYb6G,EAASS,gBAKhB,oCACE,uDACA,kBAAC,IAAD,CAAMjK,GAAI,CAAEC,SAAU,yBACpB,kBAAC,GAAD,wBAKLX,OAAO4K,SAASC,aC5EnBC,I,MAAQ,SAAC,GAAD,IAAGpB,EAAH,EAAGA,SAAUqB,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,cAAhC,OACZ,yBACE1K,UAAS,gBAAWwK,GACpBvK,MAAO,CAAEhC,QAASwM,EAAO,QAAU,SAEnC,yBAAKzK,UAAU,UAAUiH,QAASyD,IAClC,yBAAK1K,UAAU,iBACZmJ,EACD,4BAAQwB,MAAM,QAAQ3K,UAAU,cAAciH,QAASyD,GACrD,uBAAG1K,UAAU,sBAarBuK,GAAMK,aAAe,CACnBzB,SAAU,4CACVqB,YAAa,GACbC,MAAM,EACNC,cAAe,kBAAM,IAGRH,UCqEApE,gBAzBS,SAAC,GAAD,QACtBtD,WADsB,MASjB,CACLZ,MAVsB,EAEpBA,MASFQ,QAXsB,EAGpBA,QASFP,QAZsB,EAIpBA,QASFG,UAbsB,EAKpBA,UASFD,aAdsB,EAMpBA,aASFD,aAfsB,EAOpBA,iBAYuB,SAACiE,GAAD,MAAe,CACxCF,YAAa,SAAC2E,GAAD,OAAWzE,EAASF,EAAY2E,KAC7CC,aAAc,SAACD,GAAD,OAAWzE,EflDa,CACtCjF,KAAMC,EACNC,QegD+CwJ,KAC/C5E,aAAc,SAAC8E,GAAD,OAAY3E,EAASH,EAAa8E,QAGnC5E,EA/FW,SAAC,GAAD,IACxBlE,EADwB,EACxBA,MACAQ,EAFwB,EAExBA,QACAP,EAHwB,EAGxBA,QACAG,EAJwB,EAIxBA,UACA6D,EALwB,EAKxBA,YACA/D,EANwB,EAMxBA,aACAC,EAPwB,EAOxBA,aACA0I,EARwB,EAQxBA,aACA7E,EATwB,EASxBA,aATwB,OAWxB,kBAAC,GAAD,CACEwE,KAAMpI,EACNrC,UAAU,UACV0K,cAAe,kBACbxE,EAAY,CACV7D,WAAYA,KAGhBmI,YAAY,sBAEZ,kBAAC,IAAM1C,SAAP,KACE,6BACE,kBAAC,GAAD,CACE3G,KAAK,OACLK,KAAK,UACLD,MAAOW,EACP+D,aAAcA,EACdc,MAAK,uBACLC,UAAQ,IAET5E,EACC,kBAAC,GAAD,CACEjB,KAAK,OACLK,KAAK,UACLD,MAAOkB,EACPwD,aAAcA,EACde,UAAQ,IAER,KACJ,yBAAK/G,MAAO+K,EAAYhN,oBACtB,kBAAC,GAAD,CACEiC,MAAO+K,EAAY7M,YACnB8I,QAAS,kBACPf,EAAY,CACV7D,WAAYA,MAJlB,SAUA,kBAAC,GAAD,CACE4E,QAAS,kBACP6D,EAAa,CACXhI,GAAIb,EACJT,KAAMU,EACNO,QAASA,EACTO,UAAWb,MANjB,iBC3BK8I,I,MA5BA,kBACb,yBAAKjL,UAAU,oBACb,yBACEkL,MAAM,QACNC,OAAO,QACPC,QAAQ,MACRC,MAAM,8BAEN,0BACErL,UAAU,4BACVsL,EAAE,2VAEJ,0BACEtL,UAAU,6BACVsL,EAAE,qTAEJ,0BACEtL,UAAU,2BACVsL,EAAE,8RAEJ,0BACEtL,UAAU,2BACVsL,EAAE,2I,QCjBJC,I,qNAmBJC,oBAAsB,WACpB,EAAKtD,MAAMuD,wB,EAGbC,uBAAyB,WACvB,EAAKxD,MAAMyD,2B,mEAvBQ,IAAD,OAClBpD,KAAKiD,sBACLjD,KAAKmD,yBACLE,aAAY,WACV,EAAK1D,MAAM2D,wBACV,KACHtD,KAAKL,MAAM4D,aAAavD,KAAKL,MAAMpH,YAAayH,KAAKL,MAAM5H,W,yCAG1C8H,EAAIC,EAAI0D,UACd3D,EAAGvF,oBAAsB0F,KAAKL,MAAMrF,YAC7C0F,KAAKL,MAAM8D,aAET5D,EAAGtH,cAAgByH,KAAKL,MAAMpH,aAChCyH,KAAKL,MAAM4D,aAAavD,KAAKL,MAAMpH,YAAayH,KAAKL,MAAM5H,W,+BAa7D,OACE,6BACE,gDACA,yBAAKN,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,QACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,QACb,kBAAC,GAAD,QAGJ,yBAAKA,UAAU,qBACb,kBAAC,GAAD,a,GA/CY4I,IAAMC,YA0Ef1C,gBAlBS,SAAC,GAAD,IACRtD,EADQ,EACtBA,WAAcA,WADQ,IAEtBd,QAAWjB,EAFW,EAEXA,YAFW,MAGjB,CACLR,QAJsB,EAEEA,QAGxBuC,aACA/B,kBAIyB,SAACsF,GAAD,MAAe,CACxC4F,WAAY,kBAAM5F,EjBzCa,CAC/BjF,KAAMC,KiByCNyK,oBAAqB,kBAAMzF,EjB3Da,CACxCjF,KAAMC,KiB2DNqK,qBAAsB,kBAAMrF,EjBnDa,CACzCjF,KAAMC,KiBmDNuK,wBAAyB,kBAAMvF,EjBhDa,CAC5CjF,KAAMC,KiBgDN0K,aAAc,SAACG,EAAM3L,GAAP,OAAmB8F,EfpDP,SAACtF,EAAaR,GAAd,8CAA0B,WAAO8F,GAAP,eAAA8F,EAAA,6DACpD9F,EAAS,CAAEjF,KAAMC,IADmC,kBAG3B+K,KAAMC,IAAIpG,EAASlF,EAAaR,IAHL,OAG5C+L,EAH4C,OAIlDjG,EAAS,CAAEjF,KAAMC,EAA+BC,QAASgL,EAAS5E,OAJhB,gDAMlDrB,EAAS,CAAEjF,KAAMC,EAA8BC,QAAQ,EAAD,KANJ,yDAA1B,sDeoDgByK,CAAaG,EAAM3L,QAGhD6F,CAA6CoF,IClF7C,IACbe,WAAY,CAAEC,eAAgB,gBAC9BC,UAAW,CAAEvO,QAAS,OAAQkB,WAAY,UAC1CsN,aAAc,CACZC,QAAS,GACTxB,MAAO,SACPC,OAAQ,SACR5M,WAAY,QACZH,YAAa,OACbuO,aAAc,OAEhBC,aAAc,CACZF,QAAS,GACTxB,MAAO,SACPC,OAAQ,SACR5M,WAAY,MACZH,YAAa,OACbuO,aAAc,OAEhBE,iBAAkB,CAChBH,QAAS,IACTxB,MAAO,OACPC,OAAQ,OACRlN,QAAS,OACTU,OAAQ,UACRJ,WAAY,QACZH,YAAa,OACbuO,aAAc,MACdxN,WAAY,SACZG,eAAgB,SAChBwN,OAAQ,qCC9BCC,I,MAAc,CACzB,CAAEjK,GAAI,EAAGvB,MAAO,iBAChB,CAAEuB,GAAI,EAAGvB,MAAO,UAChB,CAAEuB,GAAI,EAAGvB,MAAO,kBAChB,CAAEuB,GAAI,EAAGvB,MAAO,QAChB,CAAEuB,GAAI,EAAGvB,MAAO,YCoJH4E,gBAZS,SAAC,GAAD,QAAGtD,WAAH,MAAgD,CACtER,UADsB,EAAiBA,UAEvCQ,WAFsB,EAA4BA,eAMzB,SAACuD,GAAD,MAAe,CACxCF,YAAa,SAAC8G,GAAD,OAAc5G,EAASF,EAAY8G,KAChDC,eAAgB,SAACD,GAAD,OAAc5G,EpB/GU,CACxCjF,KAAMC,EACNC,QoB6GsD2L,KACtDE,oBAAqB,SAACF,GAAD,OAAc5G,EpBjGU,CAC7CjF,KAAMC,EACNC,QoB+FgE2L,QAGnD7G,EA/IO,SAAC,GAMhB,IALL+G,EAKI,EALJA,oBACAD,EAII,EAJJA,eACA/G,EAGI,EAHJA,YACArD,EAEI,EAFJA,WACAR,EACI,EADJA,UAEA,OACE,kBAAC,KAAD,CAAiBoH,UAAW,SAAClI,GAAD,OAAW2L,EAAoB3L,KACzD,yBAAKvB,UAAU,kBACGmE,IAAftB,EACC,oCACE,sDAA4BA,EAAW2E,OAAvC,SACA,+BACE,+BACE,4BACGuF,GAAYlJ,KAAI,gBAAGf,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,MAAP,OACf,wBAAI2F,IAAKpE,GAAKvB,QAInBsB,EAAW2E,OAAS,EACnB,kBAAC,KAAD,CAAWkC,YAAY,eACpB,SAACC,GAAD,OACC,2CAAWA,EAASC,eAApB,CAAoCC,IAAKF,EAASG,WAC/CjH,EAAWgB,KAAI,SAACC,EAAIc,GAAL,OACd,kBAAC,KAAD,CACEsC,IAAKpD,EAAGhB,GACR8B,MAAOA,EACPmF,YAAajG,EAAGhB,KAEf,SAAC6G,GAAD,OACC,sCACEzC,IAAKpD,EAAGhB,GACR+G,IAAKF,EAASG,UACVH,EAASK,eACTL,EAASM,iBAEZnG,EAAGd,UACF,wBAAI/C,MAAOkN,GAAcb,YACtBxI,EAAGtC,MAGN,4BAAKsC,EAAGtC,MAEV,4BACGsC,EAAGd,UACF,oCACE,yBAAK/C,MAAOkN,GAAcX,WACxB,yBACEvM,MAAOkN,GAAcV,eAEvB,qDAIJ,oCACE,yBAAKxM,MAAOkN,GAAcX,WACxB,yBACEvM,MAAOkN,GAAcP,eAEvB,iDAKR,4BACG9I,EAAGrB,QACF,oCACGqB,EAAGrB,QAAU,EACZ,8BAAOqB,EAAGrB,QAAV,YAEA,8BAAOqB,EAAGrB,QAAV,YAIJ,2CAGJ,4BACE,yBACExC,MAAOkN,GAAcN,iBACrB5F,QAAS,kBACPf,EAAY,CACVjE,MAAO6B,EAAGhB,GACVT,WAAYA,EACZD,aAAc0B,EAAGrB,QACjBN,aAAc2B,EAAGd,cAIrB,uBAAGhD,UAAU,gBAEf,kBAAC,GAAD,OAEF,4BACE,yBACEC,MAAOkN,GAAcN,iBACrB5F,QAAS,kBAAMgG,EAAenJ,EAAGhB,MAEjC,uBAAG9C,UAAU,0BAOxB2J,EAASS,gBAId,MAEiB,IAAtBvH,EAAW2E,OACV,6BACE,gDACA,kBAAC,IAAD,CAAMrH,GAAI,CAAEC,SAAU,yBACpB,kBAAC,GAAD,uBAGF,MAGNX,OAAO4K,SAASC,cChIpB8C,G,2KACM,IAAD,EACmD7E,KAAKL,MAAvDjC,EADD,EACCA,aAAc/D,EADf,EACeA,QAASO,EADxB,EACwBA,QAAS4K,EADjC,EACiCA,cACxC,OACE,yBAAKrN,UAAU,aACb,6BACE,iDACA,kBAAC,GAAD,CACEmB,KAAK,OACLK,KAAK,UACLD,MAAOW,EACP+D,aAAcA,EACdc,MAAK,uBACLC,UAAQ,IAEV,kBAAC,GAAD,CACE7F,KAAK,OACLK,KAAK,UACLD,MAAOkB,EACPwD,aAAcA,EACde,UAAQ,IAEV,kBAAC,GAAD,CAAcC,QAAS,SAACqG,GAAD,OAAWD,EAAcC,KAAhD,a,GAtBmB1E,IAAMC,WA2CpB1C,gBAXS,SAAC,GAAD,QAAGtD,WAAH,MAA2C,CACjEX,QADsB,EAAiBA,QAEvCO,QAFsB,EAA0BA,YAMvB,SAAC2D,GAAD,MAAe,CACxCH,aAAc,SAACnC,GAAD,OAAQsC,EAASH,EAAanC,KAC5CuJ,cAAe,SAACvJ,GAAD,OAAQsC,ErB3CgB,CACvCjF,KAAMC,EACNC,QqByC8CyC,QAGjCqC,CAA6CiH,IC9B7CG,OAbf,WACE,OACE,yBAAKvN,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOwN,OAAK,EAACC,KAAK,gBAAgBC,UAAWnC,KAC7C,kBAAC,KAAD,CAAOiC,OAAK,EAACC,KAAK,sBAAsBC,UAAWC,KACnD,kBAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,uBAAuBC,UAAWN,QCAxCQ,QACW,cAA7BnO,OAAO4K,SAASwD,UAEe,UAA7BpO,OAAO4K,SAASwD,UAEhBpO,OAAO4K,SAASwD,SAASC,MACvB,2D,YCfSC,I,MAAAA,aAAgB,CAC7BlL,WAAYmC,EACZjD,QAASf,K,SCCPgN,GAAa,GAIfA,GAAU,YAAOA,IAGnB,IAKeC,GALDC,aACZC,GACAC,KAAe,WAAf,GAAgBC,MAAhB,mBAAoCL,OCNtCM,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJO,SAASC,eAAe,SHoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fedab611.chunk.js","sourcesContent":["export default {\r\n  customButtonHolder: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonSpace: { marginRight: \"1rem\" },\r\n  listStyle: {\r\n    textAlign: \"center \",\r\n    background: \"black\",\r\n    marginBotton: \"8px\",\r\n    padding: \"5px\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listSet: {\r\n    position: \"absolute\",\r\n    right: \"12%\",\r\n    top: \"10%\",\r\n    listStyle: \"none\",\r\n  },\r\n  menuListStyle: { textAlign: \"left\", paddingRight: \"1rem\", cursor: \"pointer\" },\r\n  navStyle: {\r\n    display: \"grid\",\r\n    alignItems: \"center\",\r\n    gridTemplateColumns: \"60% 40%\",\r\n  },\r\n  menuStyle: {\r\n    display: \"flex\",\r\n    listStyle: \"none\",\r\n    paddingRight: \"10px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MobileList, MenuList } from \"../\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderStyle from \"../styles\";\r\nimport \"./header.styles.scss\";\r\nconst Header = () => {\r\n  const [isMobile, setIsMobile] = useState(\r\n    window.matchMedia(\"(max-width : 680px)\").matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setIsMobile(window.matchMedia(\"(max-width : 680px)\").matches);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <nav className=\"tracker\" style={HeaderStyle.navStyle}>\r\n      <Link to={{ pathname: \"/Activity-App/\" }}>\r\n        <strong>\r\n          <span className=\"header\">activity</span>\r\n        </strong>\r\n      </Link>\r\n      {isMobile ? <MobileList /> : <MenuList style={HeaderStyle.menuStyle} />}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { DEFAULT_CITY, API_KEY } from \"../../constant\";\r\n\r\nexport const initState = {\r\n  API_KEY,\r\n  visible: false,\r\n  light: \"Night\",\r\n  isPending: false,\r\n  givenCityName: \"\",\r\n  weatherReport: {},\r\n  weatherStatus: {},\r\n  basicWeatherData: {},\r\n  defaultCity: DEFAULT_CITY,\r\n};\r\n","export const DEFAULT_CITY = \"Tampere\";\r\nexport const API_KEY = \"034e4c1a00d9f959337a5f7b1cccd8eb\";\r\n","export const WeatherActionTypes = {\r\n  GET_WEATHER: \"GET_WEATHER\",\r\n  CHANGE_LIGHT: \"CHANGE_LIGHT\",\r\n  HANDLE_CHANGE: \"HANDLE_CHANGE\",\r\n  CHANGE_WEATHER: \"CHANGE_WEATHER\",\r\n  TOGGLE_VISIBLE: \"TOGGLE_VISIBLE\",\r\n  REQUEST_WEATHER_FAILED: \"REQUEST_WEATHER_FAILED\",\r\n  REQUEST_WEATHER_PENDING: \"REQUEST_WEATHER_PENDING\",\r\n  REQUEST_WEATHER_SUCCESS: \"REQUEST_WEATHER_SUCCESS\",\r\n};\r\n","import { initState } from \"./weather.state\";\r\nimport { WeatherActionTypes as TYPES } from \"./weather.types\";\r\n\r\nconst weatherReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    //Changing the state with the defaultCityName state\r\n    case TYPES.HANDLE_CHANGE:\r\n      const { value, name } = action.payload.target;\r\n      return { ...state, [name]: value };\r\n\r\n    //Change weather accordingly with defaultCityName state\r\n    case TYPES.CHANGE_WEATHER:\r\n      action.payload.preventDefault();\r\n      const val = state.givenCityName;\r\n      return { ...state, defaultCity: val, givenCityName: \"\" };\r\n\r\n    //Set the visivility of suggestions\r\n    case TYPES.TOGGLE_VISIBLE:\r\n      return { ...state, visible: true };\r\n\r\n    //Check the current time of particular places\r\n    case TYPES.CHANGE_LIGHT:\r\n      if (state.weatherStatus.icon.includes(\"d\")) {\r\n        return { ...state, light: \"Day\" };\r\n      } else if (state.weatherStatus.icon.includes(\"n\")) {\r\n        return { ...state, light: \"Night\" };\r\n      } else {\r\n        return { ...state, light: \"\" };\r\n      }\r\n\r\n    //Check the fetching respond\r\n    case TYPES.REQUEST_WEATHER_PENDING:\r\n      return { ...state, isPending: true };\r\n\r\n    //Get the weather data and set it in the state\r\n    case TYPES.REQUEST_WEATHER_SUCCESS:\r\n      const mainTemp = action.payload.main;\r\n      const weatherStatus = action.payload.weather[0];\r\n      return {\r\n        ...state,\r\n        weatherStatus,\r\n        isPending: false,\r\n        basicWeatherData: mainTemp,\r\n        weatherReport: action.payload,\r\n      };\r\n\r\n    //Handle the error\r\n    case TYPES.REQUEST_WEATHER_FAILED:\r\n      alert(\"City doesn't found\");\r\n      return { ...state, isPending: false };\r\n\r\n    //If no action happens its retruns the states\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherReducer;\r\n","import { v4 as uuid } from \"uuid\";\r\n\r\nexport const initState = {\r\n  setId: \"\",\r\n  setName: \"\",\r\n  setCompleted: \"\",\r\n  setValidTime: \"\",\r\n  showModal: false,\r\n  notifiedItem: [],\r\n  activitiesActive: [],\r\n  activitiesNonActive: [],\r\n  timeSet: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n  activities: [\r\n    {\r\n      id: uuid(),\r\n      name: \"Running\",\r\n      completed: false,\r\n      timeSet:\r\n        Number(\"00:03\".split(\":\")[0]) * 60 + Number(\"00:03\".split(\":\")[1]),\r\n    },\r\n    { id: uuid(), name: \"Cooking\", completed: true, timeSet: NaN },\r\n    {\r\n      id: uuid(),\r\n      name: \"Sleeping\",\r\n      completed: false,\r\n      timeSet:\r\n        Number(\"00:05\".split(\":\")[0]) * 60 + Number(\"00:05\".split(\":\")[1]),\r\n    },\r\n  ],\r\n};\r\n","export const ActivitiesActionTypes = {\r\n  SET_DEFINED: \"SET_DEFINED\",\r\n  TOGGLE_MODAL: \"TOGGLE_MODAL\",\r\n  HANDLE_CHANGE: \"HANDLE_CHANGE\",\r\n  ADD_ACTIVITIES: \"ADD_ACTIVITIES\",\r\n  SORT_ACTIVITIES: \"SORT_ACTIVITIES\",\r\n  UPDATE_ACTIVITY: \"UPDATE_ACTIVITY\",\r\n  DELETE_ACTIVITY: \"DELETE_ACTIVITY\",\r\n  SORT_CHECK_ACTIVITY: \"SORT_CHECK_ACTIVITY\",\r\n  SORT_ACTIVE_ACTIVITIES: \"SORT_ACTIVE_ACTIVITIES\",\r\n  SET_DECREAMENT_MINUTES: \"SET_DECREAMENT_MINUTES\",\r\n  SET_ARCHRIVE_ACTIVITIES: \"SET_ARCHRIVE_ACTIVITIES\",\r\n  SORT_NONACTIVE_ACTIVITIES: \"SORT_NONACTIVE_ACTIVITIES\",\r\n};\r\n","export const afterDeleteActivityArray = (state, action) =>\r\n  state.activities.filter((el) => el.id !== action.payload);\r\n\r\nexport const afterDeleteActiveActivityArray = (state, action) =>\r\n  state.activitiesActive.filter((el) => el.id !== action.payload);\r\n\r\nexport const afterDeleteNonActiveActivityArray = (state, action) =>\r\n  state.activitiesNonActive.filter((el) => el.id !== action.payload);\r\n\r\nexport const editedArrayOne = (state, getValue, setValidTime, windowTime) =>\r\n  state.activities.map((ac) => {\r\n    if (ac.id === getValue.id && ac.completed === false) {\r\n      ac.name = getValue.name;\r\n      ac.completed = getValue.completed;\r\n      ac.timeSet = setValidTime - windowTime;\r\n    }\r\n    return ac;\r\n  });\r\n\r\nexport const editedArrayTwo = (state, getValue) =>\r\n  state.activities.map((ac) => {\r\n    if (ac.id === getValue.id && ac.completed === true) {\r\n      ac.name = getValue.name;\r\n      ac.completed = getValue.completed;\r\n      ac.timeSet = NaN;\r\n    }\r\n    return ac;\r\n  });\r\n\r\nexport const getfilteredArr = (state) => {\r\n  let arrayActiveObject = [];\r\n  state.activities.map((ac) => {\r\n    if (ac.completed !== true) {\r\n      return arrayActiveObject.push({ ...ac, timeSet: ac.timeSet });\r\n    }\r\n    return arrayActiveObject;\r\n  });\r\n  let getfilteredArr = arrayActiveObject.filter((ac) => ac !== undefined);\r\n  return getfilteredArr;\r\n};\r\n\r\nexport const getfilteredArray = (state) => {\r\n  let arrayNonActiveObject = [];\r\n  state.activities.map((ac) => {\r\n    if (ac.completed === true) {\r\n      return arrayNonActiveObject.push({ ...ac });\r\n    }\r\n    return arrayNonActiveObject;\r\n  });\r\n  let getfilteredArray = arrayNonActiveObject.filter((ac) => ac !== undefined);\r\n  return getfilteredArray;\r\n};\r\n\r\nexport const items = (action, state) => {\r\n  const { destination, source } = action.payload;\r\n  if (!destination) return;\r\n  const items = Array.from(state.activitiesActive);\r\n  const [reorderedItem] = items.splice(source.index, 1);\r\n  items.splice(destination.index, 0, reorderedItem);\r\n  return [...items];\r\n};\r\n\r\nexport const checkItems = (action, state) => {\r\n  if (!action.payload.destination) return;\r\n  const checkItems = Array.from(state.activities);\r\n  const [checkReorderedItem] = checkItems.splice(\r\n    action.payload.source.index,\r\n    1\r\n  );\r\n  checkItems.splice(action.payload.destination.index, 0, checkReorderedItem);\r\n  return [...checkItems];\r\n};\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { initState } from \"./activities.state\";\r\nimport { ActivitiesActionTypes as TYPES } from \"./activities.types\";\r\nimport { editedArrayOne, editedArrayTwo } from \"./activities.utils\";\r\nimport { afterDeleteActiveActivityArray } from \"./activities.utils\";\r\nimport { items, checkItems, getfilteredArr } from \"./activities.utils\";\r\nimport { afterDeleteNonActiveActivityArray } from \"./activities.utils\";\r\nimport { afterDeleteActivityArray, getfilteredArray } from \"./activities.utils\";\r\n\r\nconst activitiesReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    //While user giving some values it set the state\r\n    case TYPES.HANDLE_CHANGE:\r\n      const { value, name } = action.payload.target;\r\n      return { ...state, [name]: value };\r\n\r\n    //Making state for active activities\r\n    case TYPES.SORT_ACTIVE_ACTIVITIES:\r\n      return { ...state, activitiesActive: getfilteredArr(state) };\r\n\r\n    //Making state for active activities\r\n    case TYPES.SORT_NONACTIVE_ACTIVITIES:\r\n      return { ...state, activitiesNonActive: getfilteredArray(state) };\r\n\r\n    //Adding an activities to the state\r\n    case TYPES.ADD_ACTIVITIES:\r\n      action.payload.preventDefault();\r\n      const { setName, timeSet } = state;\r\n      let getWindowTime = new Date();\r\n      let totalWindowTime =\r\n        getWindowTime.getHours() * 60 + getWindowTime.getMinutes();\r\n      let setTime =\r\n        Number(timeSet.split(\":\")[0]) * 60 + Number(timeSet.split(\":\")[1]);\r\n      if (setTime > totalWindowTime) {\r\n        let obj = {\r\n          id: uuid(),\r\n          name: setName,\r\n          completed: false,\r\n          timeSet: setTime - totalWindowTime,\r\n        };\r\n        return {\r\n          ...state,\r\n          setName: \"\",\r\n          timeSet: \"\",\r\n          activities: [...state.activities, obj],\r\n        };\r\n      } else {\r\n        alert(\"Please choose a upcoming time\");\r\n      }\r\n      return { ...state };\r\n\r\n    //Responsible for doing the drag and drop effect in Dashboard\r\n    case TYPES.SORT_ACTIVITIES:\r\n      return {\r\n        ...state,\r\n        activitiesActive: items(action, state),\r\n      };\r\n\r\n    //Responsible for doing drag and drop in Check all Items section\r\n    case TYPES.SORT_CHECK_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        activities: checkItems(action, state),\r\n      };\r\n\r\n    //Setting the state for archrive activities\r\n    case TYPES.SET_ARCHRIVE_ACTIVITIES:\r\n      if (state.activities !== undefined && state.activities !== undefined) {\r\n        let getArchriveItem = [];\r\n        let modifedArray;\r\n        let modifiedActive;\r\n        state.activitiesActive.map((ac) => {\r\n          if (ac.id === action.payload) {\r\n            let obj = {\r\n              id: ac.id,\r\n              timeSet: NaN,\r\n              name: ac.name,\r\n              completed: true,\r\n            };\r\n            return getArchriveItem.push(obj);\r\n          }\r\n          modifedArray = state.activities.map((ac) => {\r\n            if (ac.id === action.payload) {\r\n              let obj = {\r\n                id: ac.id,\r\n                timeSet: NaN,\r\n                name: ac.name,\r\n                completed: true,\r\n              };\r\n              return obj;\r\n            } else {\r\n              let obj = {\r\n                id: ac.id,\r\n                name: ac.name,\r\n                timeSet: ac.timeSet,\r\n                completed: ac.completed,\r\n              };\r\n              return obj;\r\n            }\r\n          });\r\n          modifiedActive = modifedArray.filter((el) => el.completed === false);\r\n          return ac;\r\n        });\r\n        return {\r\n          ...state,\r\n          activitiesNonActive: [\r\n            ...getArchriveItem,\r\n            ...state.activitiesNonActive,\r\n          ],\r\n          activities: modifedArray,\r\n          activitiesActive: modifiedActive,\r\n        };\r\n      }\r\n      return { ...state };\r\n\r\n    // Track the activities time\r\n    case TYPES.SET_DECREAMENT_MINUTES:\r\n      let newArr = state.activitiesActive.map((ac) => {\r\n        return {\r\n          ...ac,\r\n          timeSet: ac.timeSet - 1,\r\n        };\r\n      });\r\n      let filteredArr = newArr.filter((ac) => ac !== undefined);\r\n      let decresedTimeArr = [...newArr, ...state.activitiesNonActive];\r\n      let getNotifiedItem = [];\r\n      newArr.map((nA) => {\r\n        if (nA.timeSet <= 0) {\r\n          return getNotifiedItem.push(nA);\r\n        }\r\n        return getNotifiedItem;\r\n      });\r\n      let getFilteredNotifiedItem = getNotifiedItem.filter(\r\n        (ac) => ac !== undefined && ac.completed === false\r\n      );\r\n      return {\r\n        ...state,\r\n        activities: decresedTimeArr,\r\n        activitiesActive: filteredArr,\r\n        notifiedItem: getFilteredNotifiedItem,\r\n      };\r\n\r\n    //Setting the state for some unhandled properties\r\n    case TYPES.SET_DEFINED:\r\n      let nonActiveArr = state.activitiesNonActive;\r\n      return { ...state, activitiesActive: [], activities: nonActiveArr };\r\n\r\n    //Toggling models as well as set some important states\r\n    case TYPES.TOGGLE_MODAL:\r\n      return {\r\n        ...state,\r\n        setName: \"\",\r\n        setId: action.payload.setId,\r\n        showModal: action.payload.showModal,\r\n        setCompleted: action.payload.setCompleted,\r\n        setValidTime: action.payload.setValidTime,\r\n      };\r\n\r\n    //Editing activites to the UI\r\n    case TYPES.UPDATE_ACTIVITY:\r\n      let getTheWindowTime = new Date();\r\n      let windowTime =\r\n        getTheWindowTime.getHours() * 60 + getTheWindowTime.getMinutes();\r\n      let setValidTime =\r\n        Number(state.timeSet.split(\":\")[0]) * 60 +\r\n        Number(state.timeSet.split(\":\")[1]);\r\n      let getValue = action.payload;\r\n      if (\r\n        setValidTime &&\r\n        getValue.name !== \"\" &&\r\n        getValue.timeSet !== \"\" &&\r\n        setValidTime > windowTime\r\n      ) {\r\n        return {\r\n          ...state,\r\n          setId: \"\",\r\n          setName: \"\",\r\n          timeSet: \"\",\r\n          setValidTime: 0,\r\n          showModal: false,\r\n          activities: editedArrayOne(state, getValue, setValidTime, windowTime),\r\n        };\r\n      } else if (\r\n        !setValidTime &&\r\n        getValue.name !== \"\" &&\r\n        getValue.timeSet === \"\"\r\n      ) {\r\n        return {\r\n          ...state,\r\n          setId: \"\",\r\n          setName: \"\",\r\n          timeSet: \"\",\r\n          setValidTime: 0,\r\n          showModal: false,\r\n          activities: editedArrayTwo(state, getValue),\r\n        };\r\n      } else {\r\n        alert(\"Please choose a upcoming time\");\r\n      }\r\n      return { ...state };\r\n\r\n    //Remove an activity from the UI\r\n    case TYPES.DELETE_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        activities: afterDeleteActivityArray(state, action),\r\n        activitiesActive: afterDeleteActiveActivityArray(state, action),\r\n        activitiesNonActive: afterDeleteNonActiveActivityArray(state, action),\r\n      };\r\n\r\n    //If no action happens its retruns the states\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activitiesReducer;\r\n","export const fetchUrl = (defaultCity, API_KEY) =>\n  `https://api.openweathermap.org/data/2.5/weather?q=${defaultCity}&appid=${API_KEY}`;\n","import { ActivitiesActionTypes as TYPES } from \"./activities.types\";\r\n\r\nexport const addActivities = (state) => ({\r\n  type: TYPES.ADD_ACTIVITIES,\r\n  payload: state,\r\n});\r\n\r\nexport const sortActivities = (state) => ({\r\n  type: TYPES.SORT_ACTIVITIES,\r\n  payload: state,\r\n});\r\n\r\nexport const setArchriveActivities = (state) => ({\r\n  type: TYPES.SET_ARCHRIVE_ACTIVITIES,\r\n  payload: state,\r\n});\r\n\r\nexport const setDecrementMinutes = () => ({\r\n  type: TYPES.SET_DECREAMENT_MINUTES,\r\n});\r\n\r\nexport const handleChange = (state) => ({\r\n  type: TYPES.HANDLE_CHANGE,\r\n  payload: state,\r\n});\r\n\r\nexport const sortActiveActivities = () => ({\r\n  type: TYPES.SORT_ACTIVE_ACTIVITIES,\r\n});\r\n\r\nexport const sortNonActiveActivities = () => ({\r\n  type: TYPES.SORT_NONACTIVE_ACTIVITIES,\r\n});\r\n\r\nexport const setDefined = () => ({\r\n  type: TYPES.SET_DEFINED,\r\n});\r\n\r\nexport const deleteActivity = (state) => ({\r\n  type: TYPES.DELETE_ACTIVITY,\r\n  payload: state,\r\n});\r\n\r\nexport const toggleModal = (state) => ({\r\n  type: TYPES.TOGGLE_MODAL,\r\n  payload: state,\r\n});\r\n\r\nexport const handleUpdate = (state) => ({\r\n  type: TYPES.UPDATE_ACTIVITY,\r\n  payload: state,\r\n});\r\n\r\nexport const sortCheckActivities = (state) => ({\r\n  type: TYPES.SORT_CHECK_ACTIVITY,\r\n  payload: state,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormInput, CustomButton, Loader } from \"../\";\r\nimport { changeWeather, handleWeatherChange } from \"../../redux/\";\r\n\r\nconst Weather = ({\r\n  isPending,\r\n  weatherReport,\r\n  weatherStatus,\r\n  givenCityName,\r\n  changeWeather,\r\n  basicWeatherData,\r\n  handleWeatherChange,\r\n}) => {\r\n  const {\r\n    temp,\r\n    temp_min,\r\n    temp_max,\r\n    humidity,\r\n    pressure,\r\n    feels_like,\r\n  } = basicWeatherData;\r\n  const { name } = weatherReport;\r\n  return (\r\n    <>\r\n      {!isPending ? (\r\n        <>\r\n          <h3>\r\n            Weather in {name} : {(temp - 273).toFixed(2)} °C\r\n          </h3>\r\n          <div>Feels like {(feels_like - 273).toFixed(2)} °C</div>\r\n          <div>Humidity {humidity}</div>\r\n          <div>Pressure {pressure}</div>\r\n          <div>Max temp {(temp_max - 273).toFixed(2)} °C</div>\r\n          <div>Min temp {(temp_min - 273).toFixed(2)} °C</div>\r\n          <div>Description: {weatherStatus.description}</div>\r\n\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"givenCityName\"\r\n            value={givenCityName}\r\n            handleChange={handleWeatherChange}\r\n            label={`Check other cities weather`}\r\n            required\r\n          />\r\n          <CustomButton onClick={changeWeather}>Change</CustomButton>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({\r\n  weather: {\r\n    isPending,\r\n    defaultCity,\r\n    givenCityName,\r\n    weatherReport,\r\n    weatherStatus,\r\n    basicWeatherData,\r\n  },\r\n}) => ({\r\n  isPending,\r\n  defaultCity,\r\n  givenCityName,\r\n  weatherReport,\r\n  weatherStatus,\r\n  basicWeatherData,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeWeather: (weather) => dispatch(changeWeather(weather)),\r\n  handleWeatherChange: (weather) => dispatch(handleWeatherChange(weather)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\r\n","import axios from \"axios\";\r\nimport { fetchUrl } from \"../\";\r\nimport { WeatherActionTypes as TYPES } from \"./weather.types\";\r\n\r\nexport const handleWeatherChange = (state) => ({\r\n  type: TYPES.HANDLE_CHANGE,\r\n  payload: state,\r\n});\r\n\r\nexport const changeWeather = (state) => ({\r\n  type: TYPES.CHANGE_WEATHER,\r\n  payload: state,\r\n});\r\n\r\nexport const getWeatherData = (state) => ({\r\n  type: TYPES.GET_WEATHER,\r\n  payload: state,\r\n});\r\n\r\nexport const toggleVisible = () => ({\r\n  type: TYPES.TOGGLE_VISIBLE,\r\n});\r\n\r\nexport const toggleLight = () => ({\r\n  type: TYPES.CHANGE_LIGHT,\r\n});\r\n\r\nexport const mountWeather = (defaultCity, API_KEY) => async (dispatch) => {\r\n  dispatch({ type: TYPES.REQUEST_WEATHER_PENDING });\r\n  try {\r\n    const response = await axios.get(fetchUrl(defaultCity, API_KEY));\r\n    dispatch({ type: TYPES.REQUEST_WEATHER_SUCCESS, payload: response.data });\r\n  } catch (e) {\r\n    dispatch({ type: TYPES.REQUEST_WEATHER_FAILED, payload: e });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Archrive = ({ activitiesNonActive }) => (\r\n  <>\r\n    <h3>Archive</h3>\r\n    <div>\r\n      {activitiesNonActive.map((ac) => (\r\n        <div key={ac.id}>\r\n          {ac.completed ? (\r\n            <div>\r\n              <p>{ac.name} - task accomplised </p>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { activitiesNonActive } }) => ({\r\n  activitiesNonActive,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Archrive);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuListHolder from \"../styles\";\r\nconst MenuList = ({ style }) => {\r\n  return (\r\n    <ul style={style}>\r\n      <Link to={{ pathname: \"/Activity-App/\" }}>\r\n        <li style={MenuListHolder.menuListStyle}>Dashboard</li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n        <li style={MenuListHolder.menuListStyle}>Create Activities</li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/check\" }}>\r\n        <li style={MenuListHolder.menuListStyle}>Check all activities</li>\r\n      </Link>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MenuList;\r\n","import React from \"react\";\r\nimport \"./form-input.styles.scss\";\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <div className=\"group\">\r\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\r\n    {label ? (\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? \"shrink\" : \"\"\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default FormInput;\r\n","import { v4 as uuid } from \"uuid\";\r\nexport const data = [\r\n  {\r\n    id: uuid(),\r\n    descripion: \"clear sky\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Clear Sky outside\" },\r\n      { id: uuid(), items: \"Go out and do your activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"broken clouds\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Broken Clouds are visible\" },\r\n      { id: uuid(), items: \"Might rain within half an hour\" },\r\n      { id: uuid(), items: \"Make sure you take umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"few clouds\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Few clouds outside\" },\r\n      { id: uuid(), items: \"Not gonna rain within hour\" },\r\n      { id: uuid(), items: \"So, you can do some activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining like shower\" },\r\n      { id: uuid(), items: \"Make sure you take umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining outside\" },\r\n      { id: uuid(), items: \"Make sure you take umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm\" },\r\n      { id: uuid(), items: \"Don't go outside! Just Don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"mist\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Mist! an example of a dispersion\" },\r\n      { id: uuid(), items: \"You might start your activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with light rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with light rain\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with rain\" },\r\n      { id: uuid(), items: \"Don't go outside! Just Don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with heavy rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with heavy rain\" },\r\n      { id: uuid(), items: \"Don't go outside! Just Don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its light thunderstorm outside\" },\r\n      { id: uuid(), items: \"Don't go outside. No activity outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its heavy thunderstorm outside\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"ragged thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its ragged thunderstorm outside\" },\r\n      { id: uuid(), items: \"Don't go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with light drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with light drizzle\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with drizzle\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with heavy drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with heavy drizzle\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light intensity drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There's light intensity of drizzle outside\" },\r\n      { id: uuid(), items: \"You can do activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its drizzely outside\" },\r\n      { id: uuid(), items: \"Walk carefully outside.\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There's heavy intensity of drizzle outside\" },\r\n      { id: uuid(), items: \"Make sure you have a good shoe while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light intensity drizzle rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its light intensity of drizzle with rain outside\" },\r\n      { id: uuid(), items: \"You can go out if want\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"drizzle rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its just drizzling rain outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity drizzle rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its heavy intensity of drizzle with rain outside\" },\r\n      { id: uuid(), items: \"Better not to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower rain and drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its drizzly with showely rain\" },\r\n      { id: uuid(), items: \"Better not to go out\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy shower rain and drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its drizzly with heavy showely rain\" },\r\n      { id: uuid(), items: \"Make sure you have an umbrealla while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its shower drizzle outside\" },\r\n      { id: uuid(), items: \"Can perform some activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raning lightly\" },\r\n      { id: uuid(), items: \"Take umbrella while doing activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"moderate rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its now raining moderately outside\" },\r\n      { id: uuid(), items: \"Take umbrella while doing activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining with heavy intensity\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"very heavy rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining with heavy intensity\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"extreme rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its extreamly raining outside\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"freezing rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its freezing outside and alos raining\" },\r\n      { id: uuid(), items: \"Take a good jacket and umbrella while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light intensity shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its showely rain with light intensity\" },\r\n      { id: uuid(), items: \"Make sure you've your umbrella with you\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its showerly raining outside\" },\r\n      { id: uuid(), items: \"Make sure you've your umbrella with you\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There's shower rain with heavy intensity\" },\r\n      { id: uuid(), items: \"Dont go out for activites\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"ragged shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raggy showery and rainy outside\" },\r\n      { id: uuid(), items: \"Take umbrealla while going out\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its light snow outside\" },\r\n      { id: uuid(), items: \"You can go and do activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Theres good snow outside\" },\r\n      { id: uuid(), items: \"You can go and play with the snows\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its heavy snow outside\" },\r\n      { id: uuid(), items: \"You can go and play with the snows\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"sleet\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its quite sleety outside\" },\r\n      { id: uuid(), items: \"Careful while doing activties outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light shower sleet\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There is light crystal ice outside\" },\r\n      { id: uuid(), items: \"No need to use winter shoes so far\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower sleet\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Ices are now a crustal outside\" },\r\n      { id: uuid(), items: \"Make sure you have your windter shoes\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light rain and snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining lightly with some snow\" },\r\n      { id: uuid(), items: \"You can go out to do some activites\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"rain and snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining and slowing same time\" },\r\n      { id: uuid(), items: \"Take a jacket and umbrella while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light shower snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its snowing very lightly outside\" },\r\n      { id: uuid(), items: \"You surely can do snow activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its shower snow outside\" },\r\n      { id: uuid(), items: \"You surely can do snow activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy shower snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Heavy shower snow is now outside\" },\r\n      { id: uuid(), items: \"Not appropiate to do activities outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"smoke\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its smoky outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"haze\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its hazzy outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"sand/ dust whirls\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its quite sandy outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"fog\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its quite foggy outside\" },\r\n      { id: uuid(), items: \"Be casefull outside while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"sand\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its really sandy outside\" },\r\n      { id: uuid(), items: \"Protect you nose, mouth, eyes while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"dust\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its really dusty outside\" },\r\n      { id: uuid(), items: \"Better not to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"volcanic ash\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Volcanic ash are coming out\" },\r\n      { id: uuid(), items: \"Don't do activities near there\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"squalls\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Sudden violent wind and storm may happend\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"tornado\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Tornonado is striking hard\" },\r\n      { id: uuid(), items: \"Go some safe place as soon as possible\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"few clouds: 11-25%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Looks there is few clouds outside\" },\r\n      { id: uuid(), items: \"You can start your activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"scattered clouds: 25-50%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Clouds are pretty scattered outside\" },\r\n      { id: uuid(), items: \"Rain may happend within an hour\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"broken clouds: 51-84%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its almost half overcast outside\" },\r\n      { id: uuid(), items: \"Make sure to take an umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"overcast clouds: 85-100%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its almost overcast outside\" },\r\n      { id: uuid(), items: \"Make sure to take an umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"overcast clouds\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its overcast outside\" },\r\n      { id: uuid(), items: \"Make sure to take an umbrella\" },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { data } from \"./descripionData\";\r\n\r\n//Generate the suggestions\r\nfunction descriptionHolder({ desc }) {\r\n  return (\r\n    <>\r\n      {data.map(({ id, descripion, listItems }) => (\r\n        <React.Fragment key={id}>\r\n          {desc === descripion ? (\r\n            <ul>\r\n              {listItems.map((li) => (\r\n                <li key={li.id}>{li.items}</li>\r\n              ))}\r\n            </ul>\r\n          ) : null}\r\n        </React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default descriptionHolder;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleVisible, toggleLight } from \"../../redux/\";\r\nimport DescriptionHolder from \"../../utils/descriptionHolder\";\r\n\r\nclass Suggestions extends React.Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.toggleVisible();\r\n    }, 5000);\r\n  }\r\n\r\n  componentDidUpdate(pP, pS, PP) {\r\n    if (pP.weatherStatus.icon !== this.props.weatherStatus.icon) {\r\n      this.props.toggleLight();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { visible, weatherStatus, light } = this.props;\r\n    return (\r\n      <>\r\n        {weatherStatus.description !== undefined ? (\r\n          <>\r\n            <h3>Suggestions</h3>\r\n            {visible ? (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={`http://openweathermap.org/img/wn/${weatherStatus.icon}@2x.png`}\r\n                    alt=\"\"\r\n                  />\r\n                  <h4>{weatherStatus.description}</h4>({\" \"}\r\n                  {weatherStatus ? <h4> {light} </h4> : null})\r\n                </div>\r\n                <DescriptionHolder\r\n                  desc={weatherStatus.description.toLowerCase()}\r\n                />\r\n              </>\r\n            ) : (\r\n              <p>No suggestions at this moment</p>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ weather: { light, visible, weatherStatus } }) => ({\r\n  light,\r\n  visible,\r\n  weatherStatus,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleLight: () => dispatch(toggleLight()),\r\n  toggleVisible: () => dispatch(toggleVisible()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Suggestions);\r\n","import React, { useState } from \"react\";\r\nimport { CustomButton, ListDropDown } from \"../\";\r\nimport ListStyle from \"../styles\";\r\n\r\nconst MobileList = () => {\r\n  const [active, setActive] = useState(false);\r\n  return (\r\n    <>\r\n      <CustomButton\r\n        onClick={() => {\r\n          setActive(!active);\r\n        }}\r\n      >\r\n        {active ? \"X\" : \"+\"}\r\n      </CustomButton>\r\n      {active && (\r\n        <ListDropDown style={ListStyle.listSet} setActive={setActive} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MobileList;\r\n","import React from \"react\";\r\nimport \"./custom-button.styles.scss\";\r\n\r\nconst CustomButton = ({ children, ...otherProps }) => (\r\n  <button className=\"custom-button\" {...otherProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Notifications = ({ notifiedItem }) => (\r\n  <>\r\n    <h3>Notifications</h3>\r\n    {notifiedItem.length === 0 ? (\r\n      <p>No notifications at this moment</p>\r\n    ) : (\r\n      notifiedItem.length > -1 &&\r\n      notifiedItem.map((notice) => {\r\n        if (notice !== undefined) {\r\n          return (\r\n            <p key={notice.id}>Your task {notice.name} has started now </p>\r\n          );\r\n        }\r\n        return notice;\r\n      })\r\n    )}\r\n  </>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { notifiedItem } }) => ({\r\n  notifiedItem,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notifications);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListHolder from \"../styles\";\r\n\r\nconst ListDropDown = ({ style, setActive }) => {\r\n  return (\r\n    <ul style={style}>\r\n      <Link to={{ pathname: \"/Activity-App/\" }}>\r\n        <li style={ListHolder.listStyle} onClick={() => setActive(false)}>\r\n          Dashboard\r\n        </li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n        <li style={ListHolder.listStyle} onClick={() => setActive(false)}>\r\n          Create Activities\r\n        </li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/check\" }}>\r\n        <li style={ListHolder.listStyle} onClick={() => setActive(false)}>\r\n          Check all activities\r\n        </li>\r\n      </Link>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListDropDown;\r\n","import React from \"react\";\r\nimport { CustomButton } from \"../\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { sortActivities, setArchriveActivities } from \"../../redux/\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst ActiveActivities = ({\r\n  sortActivities,\r\n  activitiesActive,\r\n  setArchriveActivities,\r\n}) => (\r\n  <DragDropContext onDragEnd={(value) => sortActivities(value)}>\r\n    <h3>Activities on process</h3>\r\n    {activitiesActive !== undefined ? (\r\n      <>\r\n        {activitiesActive.length > 0 ? (\r\n          <Droppable droppableId=\"activities\">\r\n            {(provided) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                {activitiesActive.map((ac, index) => {\r\n                  const { id, name, timeSet, completed } = ac;\r\n                  return (\r\n                    <Draggable key={id} index={index} draggableId={id}>\r\n                      {(provided) => (\r\n                        <div\r\n                          key={id}\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          {!completed ? (\r\n                            <div>\r\n                              <h4>{name}</h4>\r\n                              {timeSet >= 0 ? (\r\n                                <p>\r\n                                  {timeSet}{\" \"}\r\n                                  {timeSet === 1 || timeSet === 0 ? (\r\n                                    <span>minute</span>\r\n                                  ) : (\r\n                                    <span>minutes</span>\r\n                                  )}{\" \"}\r\n                                  to go\r\n                                </p>\r\n                              ) : (\r\n                                <p>\r\n                                  You are {Math.abs(timeSet)}{\" \"}\r\n                                  {Math.abs(timeSet) === 1 ? (\r\n                                    <span>minute</span>\r\n                                  ) : (\r\n                                    <span>minutes</span>\r\n                                  )}{\" \"}\r\n                                  late\r\n                                </p>\r\n                              )}\r\n                              <CustomButton\r\n                                onClick={() => setArchriveActivities(id)}\r\n                              >\r\n                                Move to Archive\r\n                              </CustomButton>\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ) : (\r\n          <>\r\n            <h4>No more active projects</h4>\r\n            <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n              <CustomButton>Add Activity</CustomButton>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </>\r\n    ) :  window.location.reload()}\r\n  </DragDropContext>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { activitiesActive } }) => ({\r\n  activitiesActive,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sortActivities: (activities) => dispatch(sortActivities(activities)),\r\n  setArchriveActivities: (activities) =>\r\n    dispatch(setArchriveActivities(activities)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveActivities);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./modal.scss\";\r\n\r\nconst Modal = ({ children, customClass, show, closeCallback }) => (\r\n  <div\r\n    className={`modal ${customClass}`}\r\n    style={{ display: show ? \"block\" : \"none\" }}\r\n  >\r\n    <div className=\"overlay\" onClick={closeCallback}></div>\r\n    <div className=\"modal_content\">\r\n      {children}\r\n      <button title=\"Close\" className=\"close_modal\" onClick={closeCallback}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element,\r\n  customClass: PropTypes.string,\r\n  show: PropTypes.bool,\r\n  closeCallback: PropTypes.func,\r\n};\r\n\r\nModal.defaultProps = {\r\n  children: <div>Empty Modal</div>,\r\n  customClass: \"\",\r\n  show: false,\r\n  closeCallback: () => false,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport ButtonStyle from \"../styles\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../utils/setModal\";\r\nimport { FormInput, CustomButton } from \"..\";\r\nimport { handleChange, handleUpdate, toggleModal } from \"../../redux\";\r\n\r\nconst EditActivityModal = ({\r\n  setId,\r\n  timeSet,\r\n  setName,\r\n  showModal,\r\n  toggleModal,\r\n  setCompleted,\r\n  setValidTime,\r\n  handleUpdate,\r\n  handleChange,\r\n}) => (\r\n  <Modal\r\n    show={showModal}\r\n    className=\"setView\"\r\n    closeCallback={() =>\r\n      toggleModal({\r\n        showModal: !showModal,\r\n      })\r\n    }\r\n    customClass=\"custom_modal_class\"\r\n  >\r\n    <React.Fragment>\r\n      <div>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"setName\"\r\n          value={setName}\r\n          handleChange={handleChange}\r\n          label={`Change activity name`}\r\n          required\r\n        />\r\n        {setValidTime ? (\r\n          <FormInput\r\n            type=\"time\"\r\n            name=\"timeSet\"\r\n            value={timeSet}\r\n            handleChange={handleChange}\r\n            required\r\n          />\r\n        ) : null}\r\n        <div style={ButtonStyle.customButtonHolder}>\r\n          <CustomButton\r\n            style={ButtonStyle.buttonSpace}\r\n            onClick={() =>\r\n              toggleModal({\r\n                showModal: !showModal,\r\n              })\r\n            }\r\n          >\r\n            Close\r\n          </CustomButton>\r\n          <CustomButton\r\n            onClick={() =>\r\n              handleUpdate({\r\n                id: setId,\r\n                name: setName,\r\n                timeSet: timeSet,\r\n                completed: setCompleted,\r\n              })\r\n            }\r\n          >\r\n            Update\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  </Modal>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({\r\n  activities: {\r\n    setId,\r\n    timeSet,\r\n    setName,\r\n    showModal,\r\n    setValidTime,\r\n    setCompleted,\r\n  },\r\n}) => ({\r\n  setId,\r\n  timeSet,\r\n  setName,\r\n  showModal,\r\n  setValidTime,\r\n  setCompleted,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleModal: (modal) => dispatch(toggleModal(modal)),\r\n  handleUpdate: (modal) => dispatch(handleUpdate(modal)),\r\n  handleChange: (change) => dispatch(handleChange(change)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditActivityModal);\r\n","import React from \"react\";\nimport \"./loader.styles.scss\";\n\nconst Loader = () => (\n  <div className=\"gradient-primary\">\n    <svg\n      width=\"150px\"\n      height=\"179px\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        className=\"d-spinner d-spinner__four\"\n        d=\"M144.421372,121.923755 C143.963266,123.384111 143.471366,124.821563 142.945674,126.236112 C138.856723,137.238783 133.098899,146.60351 125.672029,154.330576 C118.245158,162.057643 109.358082,167.978838 99.0105324,172.094341 C89.2149248,175.990321 78.4098994,178.04219 66.5951642,178.25 L0,178.25 L144.421372,121.923755 L144.421372,121.923755 Z\"\n      />\n      <path\n        className=\"d-spinner d-spinner__three\"\n        d=\"M149.033408,92.6053108 C148.756405,103.232477 147.219069,113.005232 144.421372,121.923755 L0,178.25 L139.531816,44.0158418 C140.776016,46.5834381 141.913968,49.2553065 142.945674,52.0314515 C146.681818,62.0847774 148.711047,73.2598899 149.033408,85.5570717 L149.033408,92.6053108 L149.033408,92.6053108 Z\"\n      />\n      <path\n        className=\"d-spinner d-spinner__two\"\n        d=\"M80.3248924,1.15770478 C86.9155266,2.16812827 93.1440524,3.83996395 99.0105324,6.17322306 C109.358082,10.2887257 118.245158,16.2099212 125.672029,23.9369874 C131.224984,29.7143944 135.844889,36.4073068 139.531816,44.0158418 L0,178.25 L80.3248924,1.15770478 L80.3248924,1.15770478 Z\"\n      />\n      <path\n        className=\"d-spinner d-spinner__one\"\n        d=\"M32.2942065,0 L64.5884131,0 C70.0451992,0 75.290683,0.385899921 80.3248924,1.15770478 L0,178.25 L0,0 L32.2942065,0 L32.2942065,0 Z\"\n      />\n    </svg>\n  </div>\n);\n\nexport default Loader;\n","import React from \"react\";\r\nimport \"./dashBoard.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { Weather, Archrive, Suggestions } from \"../../components/\";\r\nimport { Notifications, ActiveActivities } from \"../../components/\";\r\nimport { sortActiveActivities, sortNonActiveActivities } from \"../../redux/\";\r\nimport { setDefined, setDecrementMinutes, mountWeather } from \"../../redux/\";\r\n\r\nclass DashBoard extends React.Component {\r\n  componentDidMount() {\r\n    this.getActiveActivities();\r\n    this.getNonActiveActivities();\r\n    setInterval(() => {\r\n      this.props.setDecrementMinutes();\r\n    }, 60000);\r\n    this.props.mountWeather(this.props.defaultCity, this.props.API_KEY);\r\n  }\r\n\r\n  componentDidUpdate(pP, pS, SS) {\r\n    if (typeof pP.activities !== typeof this.props.activities) {\r\n      this.props.setDefined();\r\n    }\r\n    if (pP.defaultCity !== this.props.defaultCity) {\r\n      this.props.mountWeather(this.props.defaultCity, this.props.API_KEY);\r\n    }\r\n  }\r\n\r\n  getActiveActivities = () => {\r\n    this.props.sortActiveActivities();\r\n  };\r\n\r\n  getNonActiveActivities = () => {\r\n    this.props.sortNonActiveActivities();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Daily Activities</h1>\r\n        <div className=\"container\">\r\n          <div className=\"child-container-1\">\r\n            <ActiveActivities />\r\n          </div>\r\n          <div className=\"child-container-2\">\r\n            <div className=\"cc-1\">\r\n              <Notifications />\r\n            </div>\r\n            <div className=\"cc-2\">\r\n              <Suggestions />\r\n            </div>\r\n            <div className=\"cc-3\">\r\n              <Archrive />\r\n            </div>\r\n          </div>\r\n          <div className=\"child-container-3\">\r\n            <Weather />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({\r\n  activities: { activities },\r\n  weather: { defaultCity, API_KEY },\r\n}) => ({\r\n  API_KEY,\r\n  activities,\r\n  defaultCity,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDefined: () => dispatch(setDefined()),\r\n  setDecrementMinutes: () => dispatch(setDecrementMinutes()),\r\n  sortActiveActivities: () => dispatch(sortActiveActivities()),\r\n  sortNonActiveActivities: () => dispatch(sortNonActiveActivities()),\r\n  mountWeather: (city, API_KEY) => dispatch(mountWeather(city, API_KEY)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard);\r\n","export default {\r\n  LineThrogh: { textDecoration: \"line-through\" },\r\n  Container: { display: \"flex\", alignItems: \"center\" },\r\n  listChildOne: {\r\n    opacity: 0.5,\r\n    width: \"0.7rem\",\r\n    height: \"0.7rem\",\r\n    background: \"green\",\r\n    marginRight: \"1rem\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  listChildTwo: {\r\n    opacity: 0.5,\r\n    width: \"0.7rem\",\r\n    height: \"0.7rem\",\r\n    background: \"red\",\r\n    marginRight: \"1rem\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  ButtonRoundStyle: {\r\n    opacity: 0.65,\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    display: \"flex\",\r\n    cursor: \"pointer\",\r\n    background: \"white\",\r\n    marginRight: \"1rem\",\r\n    borderRadius: \"50%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"1px solid rgba(128,128,128, 0.5)\",\r\n  },\r\n};\r\n","export const TableHeader = [\r\n  { id: 1, value: \"Activity Name\" },\r\n  { id: 2, value: \"Status\" },\r\n  { id: 3, value: \"Time Remaining\" },\r\n  { id: 4, value: \"Edit\" },\r\n  { id: 5, value: \"Delete\" },\r\n];\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ActivityStyle from \"../styles\";\r\nimport \"./checkActivities.styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TableHeader } from \"./tableHeader\";\r\nimport { CustomButton, EditActivityModal } from \"../../components/\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { deleteActivity, sortCheckActivities, toggleModal } from \"../../redux/\";\r\n\r\nconst CheckActivity = ({\r\n  sortCheckActivities,\r\n  deleteActivity,\r\n  toggleModal,\r\n  activities,\r\n  showModal,\r\n}) => {\r\n  return (\r\n    <DragDropContext onDragEnd={(value) => sortCheckActivities(value)}>\r\n      <div className=\"moveTable\">\r\n        {activities !== undefined ? (\r\n          <>\r\n            <h2>All activities - total {activities.length} rows</h2>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  {TableHeader.map(({ id, value }) => (\r\n                    <th key={id}>{value}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              {activities.length > 0 ? (\r\n                <Droppable droppableId=\"activities\">\r\n                  {(provided) => (\r\n                    <tbody {...provided.droppableProps} ref={provided.innerRef}>\r\n                      {activities.map((ac, index) => (\r\n                        <Draggable\r\n                          key={ac.id}\r\n                          index={index}\r\n                          draggableId={ac.id}\r\n                        >\r\n                          {(provided) => (\r\n                            <tr\r\n                              key={ac.id}\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                            >\r\n                              {ac.completed ? (\r\n                                <td style={ActivityStyle.LineThrogh}>\r\n                                  {ac.name}\r\n                                </td>\r\n                              ) : (\r\n                                <td>{ac.name}</td>\r\n                              )}\r\n                              <td>\r\n                                {ac.completed ? (\r\n                                  <>\r\n                                    <div style={ActivityStyle.Container}>\r\n                                      <div\r\n                                        style={ActivityStyle.listChildOne}\r\n                                      ></div>\r\n                                      <span>Task accomplished</span>\r\n                                    </div>\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <div style={ActivityStyle.Container}>\r\n                                      <div\r\n                                        style={ActivityStyle.listChildTwo}\r\n                                      ></div>\r\n                                      <span>Task ongoing</span>\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                {ac.timeSet ? (\r\n                                  <>\r\n                                    {ac.timeSet > 1 ? (\r\n                                      <span>{ac.timeSet} minutes</span>\r\n                                    ) : (\r\n                                      <span>{ac.timeSet} minute</span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <span>0 minute</span>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                <div\r\n                                  style={ActivityStyle.ButtonRoundStyle}\r\n                                  onClick={() =>\r\n                                    toggleModal({\r\n                                      setId: ac.id,\r\n                                      showModal: !showModal,\r\n                                      setValidTime: ac.timeSet,\r\n                                      setCompleted: ac.completed,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  <i className=\"fas fa-pen\"></i>\r\n                                </div>\r\n                                <EditActivityModal />\r\n                              </td>\r\n                              <td>\r\n                                <div\r\n                                  style={ActivityStyle.ButtonRoundStyle}\r\n                                  onClick={() => deleteActivity(ac.id)}\r\n                                >\r\n                                  <i className=\"fas fa-trash\"></i>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </tbody>\r\n                  )}\r\n                </Droppable>\r\n              ) : null}\r\n            </table>\r\n            {activities.length === 0 ? (\r\n              <div>\r\n                <p>No activites yet.</p>\r\n                <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n                  <CustomButton>Add Activity</CustomButton>\r\n                </Link>\r\n              </div>\r\n            ) : null}\r\n          </>\r\n        ) : (\r\n          window.location.reload()\r\n        )}\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { showModal, activities } }) => ({\r\n  showModal,\r\n  activities,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleModal: (activity) => dispatch(toggleModal(activity)),\r\n  deleteActivity: (activity) => dispatch(deleteActivity(activity)),\r\n  sortCheckActivities: (activity) => dispatch(sortCheckActivities(activity)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckActivity);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addActivities, handleChange } from \"../../redux/\";\r\nimport { FormInput, CustomButton } from \"../../components/\";\r\n\r\nclass CreateActivity extends React.Component {\r\n  render() {\r\n    const { handleChange, setName, timeSet, addActivities } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <h1>Add an activities</h1>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"setName\"\r\n            value={setName}\r\n            handleChange={handleChange}\r\n            label={`Give a activity name`}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"time\"\r\n            name=\"timeSet\"\r\n            value={timeSet}\r\n            handleChange={handleChange}\r\n            required\r\n          />\r\n          <CustomButton onClick={(event) => addActivities(event)}>\r\n            Add\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { setName, timeSet } }) => ({\r\n  setName,\r\n  timeSet,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleChange: (ac) => dispatch(handleChange(ac)),\r\n  addActivities: (ac) => dispatch(addActivities(ac)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateActivity);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Header } from \"./components/\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { CreateActivity, DashBoard, CheckActivity } from \"./screen/\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/Activity-App\" component={DashBoard} />\r\n        <Route exact path=\"/Activity-App/check\" component={CheckActivity} />\r\n        <Route exact path=\"/Activity-App/create\" component={CreateActivity} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { weatherReducer, activitiesReducer } from \"./\";\r\n\r\nexport default combineReducers({\r\n  activities: activitiesReducer,\r\n  weather: weatherReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n// const middleware = [logger];\r\nlet middleware = [];\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware = [...middleware, logger];\r\n} else {\r\n  middleware = [...middleware];\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunkMiddleware, ...middleware)\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}