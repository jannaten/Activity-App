{"version":3,"sources":["components/styles.js","components/header/header.component.jsx","constant.js","redux/weather/weather.state.js","redux/weather/weather.types.js","redux/weather/weather.reducer.js","redux/activities/activities.state.js","redux/activities/activities.types.js","redux/activities/activities.utils.js","redux/activities/activities.reducer.js","redux/activities/activities.action.js","components/Weather/weather.component.jsx","redux/weather/weather.action.js","components/Archrive/archrive.component.jsx","components/Form-Input/form-input.component.jsx","utils/descripionData.js","utils/descriptionHolder.js","components/Suggestion/suggestion.component.jsx","components/Mobile-List/mobile-list.component.jsx","components/Custom-Button/custom-button.component.jsx","components/Notifications/notifications.component.jsx","components/List-Drop-Down/list-drop-down.component.jsx","components/Active-Activities/activeActivities.component.jsx","utils/setModal.jsx","components/Edit-Activity-Modal/editActivityModal.component.jsx","components/Menu-List/menu-list.component.jsx","screen/Dashboard/dashBoard.jsx","screen/styles.js","screen/CheckActivities/tableHeader.js","screen/CheckActivities/checkActivities.jsx","screen/CreateActivities/createActivities.jsx","App.js","serviceWorker.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["customButtonHolder","display","flexDirection","buttonSpace","marginRight","listStyle","textAlign","background","marginBotton","padding","color","cursor","listSet","position","right","top","menuListStyle","paddingRight","navStyle","alignItems","gridTemplateColumns","menuStyle","justifyContent","Header","useState","window","matchMedia","matches","isMobile","setIsMobile","useEffect","addEventListener","className","style","HeaderStyle","to","pathname","API_KEY","initState","visible","light","givenCityName","weatherReport","weatherStatus","basicWeatherData","defaultCity","WeatherActionTypes","weatherReducer","state","action","type","TYPES","payload","target","value","name","preventDefault","val","icon","includes","setId","setName","setCompleted","setValidTime","showModal","notifiedItem","activitiesActive","activitiesNonActive","timeSet","Date","getHours","getMinutes","activities","id","uuid","completed","Number","split","NaN","ActivitiesActionTypes","afterDeleteActivityArray","filter","el","afterDeleteActiveActivityArray","afterDeleteNonActiveActivityArray","editedArrayOne","getValue","windowTime","map","ac","editedArrayTwo","getfilteredArr","arrayActiveObject","push","undefined","getfilteredArray","arrayNonActiveObject","items","destination","source","Array","from","splice","index","reorderedItem","checkItems","checkReorderedItem","activitiesReducer","getWindowTime","totalWindowTime","setTime","obj","alert","modifedArray","modifiedActive","getArchriveItem","newArr","filteredArr","decresedTimeArr","getNotifiedItem","nA","getFilteredNotifiedItem","nonActiveArr","getTheWindowTime","handleChange","toggleModal","connect","weather","dispatch","changeWeather","handleWeatherChange","wR","Object","keys","temp","temp_min","temp_max","humidity","pressure","feels_like","length","toFixed","description","label","required","onClick","key","FormInput","otherProps","onChange","data","descripion","listItems","descriptionHolder","desc","Fragment","li","Suggestions","setTimeout","props","toggleVisible","pP","pS","PP","this","toggleLight","console","log","src","alt","toLowerCase","React","Component","MobileList","active","setActive","ListStyle","CustomButton","children","notice","ListDropDown","ListHolder","sortActivities","setArchriveActivities","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Math","abs","placeholder","Modal","customClass","show","closeCallback","title","defaultProps","modal","handleUpdate","change","ButtonStyle","MenuList","MenuListHolder","DashBoard","getWeather","a","axios","get","response","mainTemp","main","getWeatherData","getActiveActivities","sortActiveActivities","getNonActiveActivities","sortNonActiveActivities","setInterval","setDecrementMinutes","SS","setDefined","LineThrogh","textDecoration","Container","listChildOne","opacity","width","height","borderRadius","listChildTwo","ButtonRoundStyle","border","TableHeader","activity","deleteActivity","sortCheckActivities","ActivityStyle","CreateActivity","addActivities","event","App","exact","path","component","CheckActivity","Boolean","location","hostname","match","combineReducers","middleware","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f8b3ad93.chunk.js","sourcesContent":["export default {\r\n  customButtonHolder: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonSpace: { marginRight: \"1rem\" },\r\n  listStyle: {\r\n    textAlign: \"center \",\r\n    background: \"black\",\r\n    marginBotton: \"8px\",\r\n    padding: \"5px\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listSet: {\r\n    position: \"absolute\",\r\n    right: \"12%\",\r\n    top: \"10%\",\r\n    listStyle: \"none\",\r\n  },\r\n  menuListStyle: { textAlign: \"left\", paddingRight: \"1rem\", cursor: \"pointer\" },\r\n  navStyle: {\r\n    display: \"grid\",\r\n    alignItems: \"center\",\r\n    gridTemplateColumns: \"60% 40%\",\r\n  },\r\n  menuStyle: {\r\n    display: \"flex\",\r\n    listStyle: \"none\",\r\n    paddingRight: \"10px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MobileList, MenuList } from \"../\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderStyle from \"../styles\";\r\nimport \"./header.styles.scss\";\r\nconst Header = () => {\r\n  const [isMobile, setIsMobile] = useState(\r\n    window.matchMedia(\"(max-width : 680px)\").matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setIsMobile(window.matchMedia(\"(max-width : 680px)\").matches);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <nav className=\"tracker\" style={HeaderStyle.navStyle}>\r\n      <Link to={{ pathname: \"/Activity-App/\" }}>\r\n        <strong>\r\n          <span className=\"header\">activity</span>\r\n        </strong>\r\n      </Link>\r\n      {isMobile ? <MobileList /> : <MenuList style={HeaderStyle.menuStyle} />}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const DEFAULT_CITY = \"Tampere\";\r\nexport const API_KEY = \"034e4c1a00d9f959337a5f7b1cccd8eb\";\r\n","import { DEFAULT_CITY } from \"../../constant\";\r\n\r\nexport const initState = {\r\n  visible: false,\r\n  light: \"Night\",\r\n  givenCityName: \"\",\r\n  weatherReport: {},\r\n  weatherStatus: {},\r\n  basicWeatherData: {},\r\n  defaultCity: DEFAULT_CITY,\r\n};\r\n","export const WeatherActionTypes = {\r\n  GET_WEATHER: \"GET_WEATHER\",\r\n  CHANGE_LIGHT: \"CHANGE_LIGHT\",\r\n  HANDLE_CHANGE: \"HANDLE_CHANGE\",\r\n  CHANGE_WEATHER: \"CHANGE_WEATHER\",\r\n  TOGGLE_VISIBLE: \"TOGGLE_VISIBLE\",\r\n};\r\n","import { initState } from \"./weather.state\";\r\nimport { WeatherActionTypes as TYPES } from \"./weather.types\";\r\n\r\nconst weatherReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    //Get the data and set it in the state\r\n    case TYPES.GET_WEATHER:\r\n      const { basicWeatherData, weatherStatus, weatherReport } = action.payload;\r\n      return { ...state, basicWeatherData, weatherStatus, weatherReport };\r\n\r\n    //Changing the state with the defaultCityName state\r\n    case TYPES.HANDLE_CHANGE:\r\n      const { value, name } = action.payload.target;\r\n      return { ...state, [name]: value };\r\n\r\n    //Change weather accordingly with defaultCityName state\r\n    case TYPES.CHANGE_WEATHER:\r\n      action.payload.preventDefault();\r\n      const val = state.givenCityName;\r\n      return { ...state, defaultCity: val, givenCityName: \"\" };\r\n\r\n    //Set the visivility of suggestions\r\n    case TYPES.TOGGLE_VISIBLE:\r\n      return { ...state, visible: true };\r\n\r\n    //Check the current time of particular places\r\n    case TYPES.CHANGE_LIGHT:\r\n      if (state.weatherStatus.icon.includes(\"d\")) {\r\n        return { ...state, light: \"Day\" };\r\n      } else if (state.weatherStatus.icon.includes(\"n\")) {\r\n        return { ...state, light: \"Night\" };\r\n      } else {\r\n        return { ...state, light: \"\" };\r\n      }\r\n\r\n    //If no action happens its retruns the states\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherReducer;\r\n","import { v4 as uuid } from \"uuid\";\r\n\r\nexport const initState = {\r\n  setId: \"\",\r\n  setName: \"\",\r\n  setCompleted: \"\",\r\n  setValidTime: \"\",\r\n  showModal: false,\r\n  notifiedItem: [],\r\n  activitiesActive: [],\r\n  activitiesNonActive: [],\r\n  timeSet: new Date().getHours() + \":\" + new Date().getMinutes(),\r\n  activities: [\r\n    {\r\n      id: uuid(),\r\n      name: \"Running\",\r\n      completed: false,\r\n      timeSet:\r\n        Number(\"00:03\".split(\":\")[0]) * 60 + Number(\"00:03\".split(\":\")[1]),\r\n    },\r\n    { id: uuid(), name: \"Cooking\", completed: true, timeSet: NaN },\r\n    {\r\n      id: uuid(),\r\n      name: \"Sleeping\",\r\n      completed: false,\r\n      timeSet:\r\n        Number(\"00:05\".split(\":\")[0]) * 60 + Number(\"00:05\".split(\":\")[1]),\r\n    },\r\n  ],\r\n};\r\n","export const ActivitiesActionTypes = {\r\n  SET_DEFINED: \"SET_DEFINED\",\r\n  TOGGLE_MODAL: \"TOGGLE_MODAL\",\r\n  HANDLE_CHANGE: \"HANDLE_CHANGE\",\r\n  ADD_ACTIVITIES: \"ADD_ACTIVITIES\",\r\n  SORT_ACTIVITIES: \"SORT_ACTIVITIES\",\r\n  UPDATE_ACTIVITY: \"UPDATE_ACTIVITY\",\r\n  DELETE_ACTIVITY: \"DELETE_ACTIVITY\",\r\n  SORT_CHECK_ACTIVITY: \"SORT_CHECK_ACTIVITY\",\r\n  SORT_ACTIVE_ACTIVITIES: \"SORT_ACTIVE_ACTIVITIES\",\r\n  SET_DECREAMENT_MINUTES: \"SET_DECREAMENT_MINUTES\",\r\n  SET_ARCHRIVE_ACTIVITIES: \"SET_ARCHRIVE_ACTIVITIES\",\r\n  SORT_NONACTIVE_ACTIVITIES: \"SORT_NONACTIVE_ACTIVITIES\",\r\n};\r\n","export const afterDeleteActivityArray = (state, action) =>\r\n  state.activities.filter((el) => el.id !== action.payload);\r\n\r\nexport const afterDeleteActiveActivityArray = (state, action) =>\r\n  state.activitiesActive.filter((el) => el.id !== action.payload);\r\n\r\nexport const afterDeleteNonActiveActivityArray = (state, action) =>\r\n  state.activitiesNonActive.filter((el) => el.id !== action.payload);\r\n\r\nexport const editedArrayOne = (state, getValue, setValidTime, windowTime) =>\r\n  state.activities.map((ac) => {\r\n    if (ac.id === getValue.id && ac.completed === false) {\r\n      ac.name = getValue.name;\r\n      ac.completed = getValue.completed;\r\n      ac.timeSet = setValidTime - windowTime;\r\n    }\r\n    return ac;\r\n  });\r\n\r\nexport const editedArrayTwo = (state, getValue) =>\r\n  state.activities.map((ac) => {\r\n    if (ac.id === getValue.id && ac.completed === true) {\r\n      ac.name = getValue.name;\r\n      ac.completed = getValue.completed;\r\n      ac.timeSet = NaN;\r\n    }\r\n    return ac;\r\n  });\r\n\r\nexport const getfilteredArr = (state) => {\r\n  let arrayActiveObject = [];\r\n  state.activities.map((ac) => {\r\n    if (ac.completed !== true) {\r\n      return arrayActiveObject.push({ ...ac, timeSet: ac.timeSet });\r\n    }\r\n    return arrayActiveObject;\r\n  });\r\n  let getfilteredArr = arrayActiveObject.filter((ac) => ac !== undefined);\r\n  return getfilteredArr;\r\n};\r\n\r\nexport const getfilteredArray = (state) => {\r\n  let arrayNonActiveObject = [];\r\n  state.activities.map((ac) => {\r\n    if (ac.completed === true) {\r\n      return arrayNonActiveObject.push({ ...ac });\r\n    }\r\n    return arrayNonActiveObject;\r\n  });\r\n  let getfilteredArray = arrayNonActiveObject.filter((ac) => ac !== undefined);\r\n  return getfilteredArray;\r\n};\r\n\r\nexport const items = (action, state) => {\r\n  const { destination, source } = action.payload;\r\n  if (!destination) return;\r\n  const items = Array.from(state.activitiesActive);\r\n  const [reorderedItem] = items.splice(source.index, 1);\r\n  items.splice(destination.index, 0, reorderedItem);\r\n  return [...items];\r\n};\r\n\r\nexport const checkItems = (action, state) => {\r\n  if (!action.payload.destination) return;\r\n  const checkItems = Array.from(state.activities);\r\n  const [checkReorderedItem] = checkItems.splice(\r\n    action.payload.source.index,\r\n    1\r\n  );\r\n  checkItems.splice(action.payload.destination.index, 0, checkReorderedItem);\r\n  return [...checkItems];\r\n};\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { initState } from \"./activities.state\";\r\nimport { ActivitiesActionTypes as TYPES } from \"./activities.types\";\r\nimport { editedArrayOne, editedArrayTwo } from \"./activities.utils\";\r\nimport { afterDeleteActiveActivityArray } from \"./activities.utils\";\r\nimport { items, checkItems, getfilteredArr } from \"./activities.utils\";\r\nimport { afterDeleteNonActiveActivityArray } from \"./activities.utils\";\r\nimport { afterDeleteActivityArray, getfilteredArray } from \"./activities.utils\";\r\n\r\nconst activitiesReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    //While user giving some values it set the state\r\n    case TYPES.HANDLE_CHANGE:\r\n      const { value, name } = action.payload.target;\r\n      return { ...state, [name]: value };\r\n\r\n    //Making state for active activities\r\n    case TYPES.SORT_ACTIVE_ACTIVITIES:\r\n      return { ...state, activitiesActive: getfilteredArr(state) };\r\n\r\n    //Making state for active activities\r\n    case TYPES.SORT_NONACTIVE_ACTIVITIES:\r\n      return { ...state, activitiesNonActive: getfilteredArray(state) };\r\n\r\n    //Adding an activities to the state\r\n    case TYPES.ADD_ACTIVITIES:\r\n      action.payload.preventDefault();\r\n      const { setName, timeSet } = state;\r\n      let getWindowTime = new Date();\r\n      let totalWindowTime =\r\n        getWindowTime.getHours() * 60 + getWindowTime.getMinutes();\r\n      let setTime =\r\n        Number(timeSet.split(\":\")[0]) * 60 + Number(timeSet.split(\":\")[1]);\r\n      if (setTime > totalWindowTime) {\r\n        let obj = {\r\n          id: uuid(),\r\n          name: setName,\r\n          completed: false,\r\n          timeSet: setTime - totalWindowTime,\r\n        };\r\n        return {\r\n          ...state,\r\n          setName: \"\",\r\n          timeSet: \"\",\r\n          activities: [...state.activities, obj],\r\n        };\r\n      } else {\r\n        alert(\"Please choose a upcoming time\");\r\n      }\r\n      return { ...state };\r\n\r\n    //Responsible for doing the drag and drop effect in Dashboard\r\n    case TYPES.SORT_ACTIVITIES:\r\n      return {\r\n        ...state,\r\n        activitiesActive: items(action, state),\r\n      };\r\n\r\n    //Responsible for doing drag and drop in Check all Items section\r\n    case TYPES.SORT_CHECK_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        activities: checkItems(action, state),\r\n      };\r\n\r\n    //Setting the state for archrive activities\r\n    case TYPES.SET_ARCHRIVE_ACTIVITIES:\r\n      if (state.activities !== undefined && state.activities !== undefined) {\r\n        let getArchriveItem = [];\r\n        let modifedArray;\r\n        let modifiedActive;\r\n        state.activitiesActive.map((ac) => {\r\n          if (ac.id === action.payload) {\r\n            let obj = {\r\n              id: ac.id,\r\n              timeSet: NaN,\r\n              name: ac.name,\r\n              completed: true,\r\n            };\r\n            return getArchriveItem.push(obj);\r\n          }\r\n          modifedArray = state.activities.map((ac) => {\r\n            if (ac.id === action.payload) {\r\n              let obj = {\r\n                id: ac.id,\r\n                timeSet: NaN,\r\n                name: ac.name,\r\n                completed: true,\r\n              };\r\n              return obj;\r\n            } else {\r\n              let obj = {\r\n                id: ac.id,\r\n                name: ac.name,\r\n                timeSet: ac.timeSet,\r\n                completed: ac.completed,\r\n              };\r\n              return obj;\r\n            }\r\n          });\r\n          modifiedActive = modifedArray.filter((el) => el.completed === false);\r\n          return ac;\r\n        });\r\n        return {\r\n          ...state,\r\n          activitiesNonActive: [\r\n            ...getArchriveItem,\r\n            ...state.activitiesNonActive,\r\n          ],\r\n          activities: modifedArray,\r\n          activitiesActive: modifiedActive,\r\n        };\r\n      }\r\n      return { ...state };\r\n\r\n    // Track the activities time\r\n    case TYPES.SET_DECREAMENT_MINUTES:\r\n      let newArr = state.activitiesActive.map((ac) => {\r\n        return {\r\n          ...ac,\r\n          timeSet: ac.timeSet - 1,\r\n        };\r\n      });\r\n      let filteredArr = newArr.filter((ac) => ac !== undefined);\r\n      let decresedTimeArr = [...newArr, ...state.activitiesNonActive];\r\n      let getNotifiedItem = [];\r\n      newArr.map((nA) => {\r\n        if (nA.timeSet <= 0) {\r\n          return getNotifiedItem.push(nA);\r\n        }\r\n        return getNotifiedItem;\r\n      });\r\n      let getFilteredNotifiedItem = getNotifiedItem.filter(\r\n        (ac) => ac !== undefined && ac.completed === false\r\n      );\r\n      return {\r\n        ...state,\r\n        activities: decresedTimeArr,\r\n        activitiesActive: filteredArr,\r\n        notifiedItem: getFilteredNotifiedItem,\r\n      };\r\n\r\n    //Setting the state for some unhandled properties\r\n    case TYPES.SET_DEFINED:\r\n      let nonActiveArr = state.activitiesNonActive;\r\n      return { ...state, activitiesActive: [], activities: nonActiveArr };\r\n\r\n    //Toggling models as well as set some important states\r\n    case TYPES.TOGGLE_MODAL:\r\n      return {\r\n        ...state,\r\n        setName: \"\",\r\n        setId: action.payload.setId,\r\n        showModal: action.payload.showModal,\r\n        setCompleted: action.payload.setCompleted,\r\n        setValidTime: action.payload.setValidTime,\r\n      };\r\n\r\n    //Editing activites to the UI\r\n    case TYPES.UPDATE_ACTIVITY:\r\n      let getTheWindowTime = new Date();\r\n      let windowTime =\r\n        getTheWindowTime.getHours() * 60 + getTheWindowTime.getMinutes();\r\n      let setValidTime =\r\n        Number(state.timeSet.split(\":\")[0]) * 60 +\r\n        Number(state.timeSet.split(\":\")[1]);\r\n      let getValue = action.payload;\r\n      if (\r\n        setValidTime &&\r\n        getValue.name !== \"\" &&\r\n        getValue.timeSet !== \"\" &&\r\n        setValidTime > windowTime\r\n      ) {\r\n        return {\r\n          ...state,\r\n          setId: \"\",\r\n          setName: \"\",\r\n          timeSet: \"\",\r\n          setValidTime: 0,\r\n          showModal: false,\r\n          activities: editedArrayOne(state, getValue, setValidTime, windowTime),\r\n        };\r\n      } else if (\r\n        !setValidTime &&\r\n        getValue.name !== \"\" &&\r\n        getValue.timeSet === \"\"\r\n      ) {\r\n        return {\r\n          ...state,\r\n          setId: \"\",\r\n          setName: \"\",\r\n          timeSet: \"\",\r\n          setValidTime: 0,\r\n          showModal: false,\r\n          activities: editedArrayTwo(state, getValue),\r\n        };\r\n      } else {\r\n        alert(\"Please choose a upcoming time\");\r\n      }\r\n      return { ...state };\r\n\r\n    //Remove an activity from the UI\r\n    case TYPES.DELETE_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        activities: afterDeleteActivityArray(state, action),\r\n        activitiesActive: afterDeleteActiveActivityArray(state, action),\r\n        activitiesNonActive: afterDeleteNonActiveActivityArray(state, action),\r\n      };\r\n\r\n    //If no action happens its retruns the states\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activitiesReducer;\r\n","import { ActivitiesActionTypes as TYPES } from \"./activities.types\";\r\n\r\nexport const addActivities = (state) => ({\r\n  type: TYPES.ADD_ACTIVITIES,\r\n  payload: state,\r\n});\r\n\r\nexport const sortActivities = (state) => ({\r\n  type: TYPES.SORT_ACTIVITIES,\r\n  payload: state,\r\n});\r\n\r\nexport const setArchriveActivities = (state) => ({\r\n  type: TYPES.SET_ARCHRIVE_ACTIVITIES,\r\n  payload: state,\r\n});\r\n\r\nexport const setDecrementMinutes = () => ({\r\n  type: TYPES.SET_DECREAMENT_MINUTES,\r\n});\r\n\r\nexport const handleChange = (state) => ({\r\n  type: TYPES.HANDLE_CHANGE,\r\n  payload: state,\r\n});\r\n\r\nexport const sortActiveActivities = () => ({\r\n  type: TYPES.SORT_ACTIVE_ACTIVITIES,\r\n});\r\n\r\nexport const sortNonActiveActivities = () => ({\r\n  type: TYPES.SORT_NONACTIVE_ACTIVITIES,\r\n});\r\n\r\nexport const setDefined = () => ({\r\n  type: TYPES.SET_DEFINED,\r\n});\r\n\r\nexport const deleteActivity = (state) => ({\r\n  type: TYPES.DELETE_ACTIVITY,\r\n  payload: state,\r\n});\r\n\r\nexport const toggleModal = (state) => ({\r\n  type: TYPES.TOGGLE_MODAL,\r\n  payload: state,\r\n});\r\n\r\nexport const handleUpdate = (state) => ({\r\n  type: TYPES.UPDATE_ACTIVITY,\r\n  payload: state,\r\n});\r\n\r\nexport const sortCheckActivities = (state) => ({\r\n  type: TYPES.SORT_CHECK_ACTIVITY,\r\n  payload: state,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormInput, CustomButton } from \"../\";\r\nimport { changeWeather, handleWeatherChange } from \"../../redux/\";\r\n\r\nconst Weather = ({\r\n  weatherReport,\r\n  weatherStatus,\r\n  givenCityName,\r\n  changeWeather,\r\n  basicWeatherData,\r\n  handleWeatherChange,\r\n}) => {\r\n  const wR = Object.keys(weatherReport);\r\n  const {\r\n    temp,\r\n    temp_min,\r\n    temp_max,\r\n    humidity,\r\n    pressure,\r\n    feels_like,\r\n  } = basicWeatherData;\r\n  const { name } = weatherReport;\r\n  return (\r\n    <>\r\n      {wR.length > 0 ? (\r\n        <>\r\n          <h3>\r\n            Weather in {name} : {(temp - 273).toFixed(2)} °C\r\n          </h3>\r\n          <div>Feels like {(feels_like - 273).toFixed(2)} °C</div>\r\n          <div>Humidity {humidity}</div>\r\n          <div>Pressure {pressure}</div>\r\n          <div>Max temp {(temp_max - 273).toFixed(2)} °C</div>\r\n          <div>Min temp {(temp_min - 273).toFixed(2)} °C</div>\r\n          <div>Description: {weatherStatus.description}</div>\r\n\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"givenCityName\"\r\n            value={givenCityName}\r\n            handleChange={handleWeatherChange}\r\n            label={`Check other cities weather`}\r\n            required\r\n          />\r\n          <CustomButton onClick={changeWeather}>Change</CustomButton>\r\n        </>\r\n      ) : (\r\n        <div>Cannot fetch weather data</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({\r\n  weather: {\r\n    defaultCity,\r\n    givenCityName,\r\n    weatherReport,\r\n    weatherStatus,\r\n    basicWeatherData,\r\n  },\r\n}) => ({\r\n  defaultCity,\r\n  givenCityName,\r\n  weatherReport,\r\n  weatherStatus,\r\n  basicWeatherData,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeWeather: (weather) => dispatch(changeWeather(weather)),\r\n  handleWeatherChange: (weather) => dispatch(handleWeatherChange(weather)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\r\n","import { WeatherActionTypes as TYPES } from \"./weather.types\";\r\n\r\nexport const handleWeatherChange = (state) => ({\r\n  type: TYPES.HANDLE_CHANGE,\r\n  payload: state,\r\n});\r\n\r\nexport const changeWeather = (state) => ({\r\n  type: TYPES.CHANGE_WEATHER,\r\n  payload: state,\r\n});\r\n\r\nexport const getWeatherData = (state) => ({\r\n  type: TYPES.GET_WEATHER,\r\n  payload: state,\r\n});\r\n\r\nexport const toggleVisible = () => ({\r\n  type: TYPES.TOGGLE_VISIBLE,\r\n});\r\n\r\nexport const toggleLight = () => ({\r\n  type: TYPES.CHANGE_LIGHT,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Archrive = ({ activitiesNonActive }) => (\r\n  <>\r\n    <h3>Archive</h3>\r\n    <div>\r\n      {activitiesNonActive.map((ac) => (\r\n        <div key={ac.id}>\r\n          {ac.completed ? (\r\n            <div>\r\n              <p>{ac.name} - task accomplised </p>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { activitiesNonActive } }) => ({\r\n  activitiesNonActive,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Archrive);\r\n","import React from \"react\";\r\nimport \"./form-input.styles.scss\";\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <div className=\"group\">\r\n    <input className=\"form-input\" onChange={handleChange} {...otherProps} />\r\n    {label ? (\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? \"shrink\" : \"\"\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default FormInput;\r\n","import { v4 as uuid } from \"uuid\";\r\nexport const data = [\r\n  {\r\n    id: uuid(),\r\n    descripion: \"clear sky\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Clear Sky outside\" },\r\n      { id: uuid(), items: \"Go out and do your activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"broken clouds\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Broken Clouds are visible\" },\r\n      { id: uuid(), items: \"Might rain within half an hour\" },\r\n      { id: uuid(), items: \"Make sure you take umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"few clouds\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Few clouds outside\" },\r\n      { id: uuid(), items: \"Not gonna rain within hour\" },\r\n      { id: uuid(), items: \"So, you can do some activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining like shower\" },\r\n      { id: uuid(), items: \"Make sure you take umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining outside\" },\r\n      { id: uuid(), items: \"Make sure you take umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm\" },\r\n      { id: uuid(), items: \"Don't go outside! Just Don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"mist\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Mist! an example of a dispersion\" },\r\n      { id: uuid(), items: \"You might start your activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with light rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with light rain\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with rain\" },\r\n      { id: uuid(), items: \"Don't go outside! Just Don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with heavy rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with heavy rain\" },\r\n      { id: uuid(), items: \"Don't go outside! Just Don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its light thunderstorm outside\" },\r\n      { id: uuid(), items: \"Don't go outside. No activity outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its heavy thunderstorm outside\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"ragged thunderstorm\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its ragged thunderstorm outside\" },\r\n      { id: uuid(), items: \"Don't go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with light drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with light drizzle\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with drizzle\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"thunderstorm with heavy drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its thunderstorm with heavy drizzle\" },\r\n      { id: uuid(), items: \"Don't go outside. Just don't\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light intensity drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There's light intensity of drizzle outside\" },\r\n      { id: uuid(), items: \"You can do activity\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its drizzely outside\" },\r\n      { id: uuid(), items: \"Walk carefully outside.\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There's heavy intensity of drizzle outside\" },\r\n      { id: uuid(), items: \"Make sure you have a good shoe while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light intensity drizzle rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its light intensity of drizzle with rain outside\" },\r\n      { id: uuid(), items: \"You can go out if want\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"drizzle rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its just drizzling rain outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity drizzle rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its heavy intensity of drizzle with rain outside\" },\r\n      { id: uuid(), items: \"Better not to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower rain and drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its drizzly with showely rain\" },\r\n      { id: uuid(), items: \"Better not to go out\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy shower rain and drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its drizzly with heavy showely rain\" },\r\n      { id: uuid(), items: \"Make sure you have an umbrealla while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower drizzle\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its shower drizzle outside\" },\r\n      { id: uuid(), items: \"Can perform some activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raning lightly\" },\r\n      { id: uuid(), items: \"Take umbrella while doing activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"moderate rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its now raining moderately outside\" },\r\n      { id: uuid(), items: \"Take umbrella while doing activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining with heavy intensity\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"very heavy rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining with heavy intensity\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"extreme rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its extreamly raining outside\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"freezing rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its freezing outside and alos raining\" },\r\n      { id: uuid(), items: \"Take a good jacket and umbrella while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light intensity shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its showely rain with light intensity\" },\r\n      { id: uuid(), items: \"Make sure you've your umbrella with you\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its showerly raining outside\" },\r\n      { id: uuid(), items: \"Make sure you've your umbrella with you\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy intensity shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There's shower rain with heavy intensity\" },\r\n      { id: uuid(), items: \"Dont go out for activites\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"ragged shower rain\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raggy showery and rainy outside\" },\r\n      { id: uuid(), items: \"Take umbrealla while going out\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its light snow outside\" },\r\n      { id: uuid(), items: \"You can go and do activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Theres good snow outside\" },\r\n      { id: uuid(), items: \"You can go and play with the snows\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its heavy snow outside\" },\r\n      { id: uuid(), items: \"You can go and play with the snows\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"sleet\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its quite sleety outside\" },\r\n      { id: uuid(), items: \"Careful while doing activties outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light shower sleet\",\r\n    listItems: [\r\n      { id: uuid(), items: \"There is light crystal ice outside\" },\r\n      { id: uuid(), items: \"No need to use winter shoes so far\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower sleet\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Ices are now a crustal outside\" },\r\n      { id: uuid(), items: \"Make sure you have your windter shoes\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light rain and snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining lightly with some snow\" },\r\n      { id: uuid(), items: \"You can go out to do some activites\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"rain and snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its raining and slowing same time\" },\r\n      { id: uuid(), items: \"Take a jacket and umbrella while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"light shower snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its snowing very lightly outside\" },\r\n      { id: uuid(), items: \"You surely can do snow activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"shower snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its shower snow outside\" },\r\n      { id: uuid(), items: \"You surely can do snow activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"heavy shower snow\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Heavy shower snow is now outside\" },\r\n      { id: uuid(), items: \"Not appropiate to do activities outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"smoke\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its smoky outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"haze\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its hazzy outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"sand/ dust whirls\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its quite sandy outside\" },\r\n      { id: uuid(), items: \"Try to use mask while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"fog\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its quite foggy outside\" },\r\n      { id: uuid(), items: \"Be casefull outside while walking\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"sand\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its really sandy outside\" },\r\n      { id: uuid(), items: \"Protect you nose, mouth, eyes while outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"dust\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its really dusty outside\" },\r\n      { id: uuid(), items: \"Better not to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"volcanic ash\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Volcanic ash are coming out\" },\r\n      { id: uuid(), items: \"Don't do activities near there\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"squalls\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Sudden violent wind and storm may happend\" },\r\n      { id: uuid(), items: \"No need to go outside\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"tornado\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Tornonado is striking hard\" },\r\n      { id: uuid(), items: \"Go some safe place as soon as possible\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"few clouds: 11-25%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Looks there is few clouds outside\" },\r\n      { id: uuid(), items: \"You can start your activities\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"scattered clouds: 25-50%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Clouds are pretty scattered outside\" },\r\n      { id: uuid(), items: \"Rain may happend within an hour\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"broken clouds: 51-84%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its almost half overcast outside\" },\r\n      { id: uuid(), items: \"Make sure to take an umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"overcast clouds: 85-100%\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its almost overcast outside\" },\r\n      { id: uuid(), items: \"Make sure to take an umbrella\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    descripion: \"overcast clouds\",\r\n    listItems: [\r\n      { id: uuid(), items: \"Its overcast outside\" },\r\n      { id: uuid(), items: \"Make sure to take an umbrella\" },\r\n    ],\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { data } from \"./descripionData\";\r\n\r\n//Generate the suggestions\r\nfunction descriptionHolder({ desc }) {\r\n  return (\r\n    <>\r\n      {data.map(({ id, descripion, listItems }) => (\r\n        <React.Fragment key={id}>\r\n          {desc === descripion ? (\r\n            <ul>\r\n              {listItems.map((li) => (\r\n                <li key={li.id}>{li.items}</li>\r\n              ))}\r\n            </ul>\r\n          ) : null}\r\n        </React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default descriptionHolder;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleVisible, toggleLight } from \"../../redux/\";\r\nimport DescriptionHolder from \"../../utils/descriptionHolder\";\r\n\r\nclass Suggestions extends React.Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.toggleVisible();\r\n    }, 5000);\r\n  }\r\n\r\n  componentDidUpdate(pP, pS, PP) {\r\n    if (pP.weatherStatus.icon !== this.props.weatherStatus.icon) {\r\n      this.props.toggleLight();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { visible, weatherStatus, light } = this.props;\r\n    console.log(typeof weatherStatus.description);\r\n    return (\r\n      <>\r\n        {weatherStatus.description !== undefined ? (\r\n          <>\r\n            <h3>Suggestions</h3>\r\n            {visible ? (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={`http://openweathermap.org/img/wn/${weatherStatus.icon}@2x.png`}\r\n                    alt=\"\"\r\n                  />\r\n                  <h4>{weatherStatus.description}</h4>({\" \"}\r\n                  {weatherStatus ? <h4> {light} </h4> : null})\r\n                </div>\r\n                <DescriptionHolder\r\n                  desc={weatherStatus.description.toLowerCase()}\r\n                />\r\n              </>\r\n            ) : (\r\n              <p>No suggestions at this moment</p>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ weather: { light, visible, weatherStatus } }) => ({\r\n  light,\r\n  visible,\r\n  weatherStatus,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleLight: () => dispatch(toggleLight()),\r\n  toggleVisible: () => dispatch(toggleVisible()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Suggestions);\r\n","import React, { useState } from \"react\";\r\nimport { CustomButton, ListDropDown } from \"../\";\r\nimport ListStyle from \"../styles\";\r\n\r\nconst MobileList = () => {\r\n  const [active, setActive] = useState(false);\r\n  return (\r\n    <>\r\n      <CustomButton\r\n        onClick={() => {\r\n          setActive(!active);\r\n        }}\r\n      >\r\n        {active ? \"X\" : \"+\"}\r\n      </CustomButton>\r\n      {active && (\r\n        <ListDropDown style={ListStyle.listSet} setActive={setActive} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MobileList;\r\n","import React from \"react\";\r\nimport \"./custom-button.styles.scss\";\r\n\r\nconst CustomButton = ({ children, ...otherProps }) => (\r\n  <button className=\"custom-button\" {...otherProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Notifications = ({ notifiedItem }) => (\r\n  <>\r\n    <h3>Notifications</h3>\r\n    {notifiedItem.length === 0 ? (\r\n      <p>No notifications at this moment</p>\r\n    ) : (\r\n      notifiedItem.length > -1 &&\r\n      notifiedItem.map((notice) => {\r\n        if (notice !== undefined) {\r\n          return (\r\n            <p key={notice.id}>Your task {notice.name} has started now </p>\r\n          );\r\n        }\r\n        return notice;\r\n      })\r\n    )}\r\n  </>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { notifiedItem } }) => ({\r\n  notifiedItem,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Notifications);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListHolder from \"../styles\";\r\n\r\nconst ListDropDown = ({ style, setActive }) => {\r\n  return (\r\n    <ul style={style}>\r\n      <Link to={{ pathname: \"/Activity-App/\" }}>\r\n        <li style={ListHolder.listStyle} onClick={() => setActive(false)}>\r\n          Dashboard\r\n        </li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n        <li style={ListHolder.listStyle} onClick={() => setActive(false)}>\r\n          Create Activities\r\n        </li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/check\" }}>\r\n        <li style={ListHolder.listStyle} onClick={() => setActive(false)}>\r\n          Check all activities\r\n        </li>\r\n      </Link>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListDropDown;\r\n","import React from \"react\";\r\nimport { CustomButton } from \"../\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { sortActivities, setArchriveActivities } from \"../../redux/\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst ActiveActivities = ({\r\n  sortActivities,\r\n  activitiesActive,\r\n  setArchriveActivities,\r\n}) => (\r\n  <DragDropContext onDragEnd={(value) => sortActivities(value)}>\r\n    <h3>Activities on process</h3>\r\n    {activitiesActive.length > 0 ? (\r\n      <Droppable droppableId=\"activities\">\r\n        {(provided) => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {activitiesActive.map((ac, index) => {\r\n              const { id, name, timeSet, completed } = ac;\r\n              return (\r\n                <Draggable key={id} index={index} draggableId={id}>\r\n                  {(provided) => (\r\n                    <div\r\n                      key={id}\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      {!completed ? (\r\n                        <div>\r\n                          <h4>{name}</h4>\r\n                          {timeSet >= 0 ? (\r\n                            <p>\r\n                              {timeSet}{\" \"}\r\n                              {timeSet === 1 || timeSet === 0 ? (\r\n                                <span>minute</span>\r\n                              ) : (\r\n                                <span>minutes</span>\r\n                              )}{\" \"}\r\n                              to go\r\n                            </p>\r\n                          ) : (\r\n                            <p>\r\n                              You are {Math.abs(timeSet)}{\" \"}\r\n                              {Math.abs(timeSet) === 1 ? (\r\n                                <span>minute</span>\r\n                              ) : (\r\n                                <span>minutes</span>\r\n                              )}{\" \"}\r\n                              late\r\n                            </p>\r\n                          )}\r\n                          <CustomButton\r\n                            onClick={() => setArchriveActivities(id)}\r\n                          >\r\n                            Move to Archive\r\n                          </CustomButton>\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    ) : (\r\n      <>\r\n        <h4>No more active projects</h4>\r\n        <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n          <CustomButton>Add Activity</CustomButton>\r\n        </Link>\r\n      </>\r\n    )}\r\n  </DragDropContext>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { activitiesActive } }) => ({\r\n  activitiesActive,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sortActivities: (activities) => dispatch(sortActivities(activities)),\r\n  setArchriveActivities: (activities) =>\r\n    dispatch(setArchriveActivities(activities)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveActivities);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./modal.scss\";\r\n\r\nconst Modal = ({ children, customClass, show, closeCallback }) => (\r\n  <div\r\n    className={`modal ${customClass}`}\r\n    style={{ display: show ? \"block\" : \"none\" }}\r\n  >\r\n    <div className=\"overlay\" onClick={closeCallback}></div>\r\n    <div className=\"modal_content\">\r\n      {children}\r\n      <button title=\"Close\" className=\"close_modal\" onClick={closeCallback}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.element,\r\n  customClass: PropTypes.string,\r\n  show: PropTypes.bool,\r\n  closeCallback: PropTypes.func,\r\n};\r\n\r\nModal.defaultProps = {\r\n  children: <div>Empty Modal</div>,\r\n  customClass: \"\",\r\n  show: false,\r\n  closeCallback: () => false,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport ButtonStyle from \"../styles\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../../utils/setModal\";\r\nimport { FormInput, CustomButton } from \"..\";\r\nimport { handleChange, handleUpdate, toggleModal } from \"../../redux\";\r\n\r\nconst EditActivityModal = ({\r\n  setId,\r\n  timeSet,\r\n  setName,\r\n  showModal,\r\n  toggleModal,\r\n  setCompleted,\r\n  setValidTime,\r\n  handleUpdate,\r\n  handleChange,\r\n}) => (\r\n  <Modal\r\n    show={showModal}\r\n    closeCallback={() =>\r\n      toggleModal({\r\n        showModal: !showModal,\r\n      })\r\n    }\r\n    customClass=\"custom_modal_class\"\r\n  >\r\n    <React.Fragment>\r\n      <div>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"setName\"\r\n          value={setName}\r\n          handleChange={handleChange}\r\n          label={`Change activity name`}\r\n          required\r\n        />\r\n        {setValidTime ? (\r\n          <FormInput\r\n            type=\"time\"\r\n            name=\"timeSet\"\r\n            value={timeSet}\r\n            handleChange={handleChange}\r\n            required\r\n          />\r\n        ) : null}\r\n        <div style={ButtonStyle.customButtonHolder}>\r\n          <CustomButton\r\n            style={ButtonStyle.buttonSpace}\r\n            onClick={() =>\r\n              toggleModal({\r\n                showModal: !showModal,\r\n              })\r\n            }\r\n          >\r\n            Close\r\n          </CustomButton>\r\n          <CustomButton\r\n            onClick={() =>\r\n              handleUpdate({\r\n                id: setId,\r\n                name: setName,\r\n                timeSet: timeSet,\r\n                completed: setCompleted,\r\n              })\r\n            }\r\n          >\r\n            Update\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  </Modal>\r\n);\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({\r\n  activities: {\r\n    setId,\r\n    timeSet,\r\n    setName,\r\n    showModal,\r\n    setValidTime,\r\n    setCompleted,\r\n  },\r\n}) => ({\r\n  setId,\r\n  timeSet,\r\n  setName,\r\n  showModal,\r\n  setValidTime,\r\n  setCompleted,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleModal: (modal) => dispatch(toggleModal(modal)),\r\n  handleUpdate: (modal) => dispatch(handleUpdate(modal)),\r\n  handleChange: (change) => dispatch(handleChange(change)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditActivityModal);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuListHolder from \"../styles\";\r\nconst MenuList = ({ style }) => {\r\n  return (\r\n    <ul style={style}>\r\n      <Link to={{ pathname: \"/Activity-App/\" }}>\r\n        <li style={MenuListHolder.menuListStyle}>Dashboard</li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n        <li style={MenuListHolder.menuListStyle}>Create Activities</li>\r\n      </Link>\r\n      <Link to={{ pathname: \"/Activity-App/check\" }}>\r\n        <li style={MenuListHolder.menuListStyle}>Check all activities</li>\r\n      </Link>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MenuList;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./dashBoard.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { API_KEY } from \"../../constant\";\r\nimport { Weather, Archrive, Suggestions } from \"../../components/\";\r\nimport { Notifications, ActiveActivities } from \"../../components/\";\r\nimport { sortActiveActivities, sortNonActiveActivities } from \"../../redux/\";\r\nimport { setDefined, setDecrementMinutes, getWeatherData } from \"../../redux/\";\r\n\r\nclass DashBoard extends React.Component {\r\n  componentDidMount() {\r\n    this.getActiveActivities();\r\n    this.getNonActiveActivities();\r\n    setInterval(() => {\r\n      this.props.setDecrementMinutes();\r\n    }, 60000);\r\n    this.getWeather();\r\n  }\r\n\r\n  getWeather = async () => {\r\n    try {\r\n      const { defaultCity } = this.props;\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${defaultCity}&appid=${API_KEY}`\r\n      );\r\n      const mainTemp = response.data.main;\r\n      const weatherStatus = response.data.weather[0];\r\n      await this.props.getWeatherData({\r\n        weatherReport: response.data,\r\n        basicWeatherData: mainTemp,\r\n        weatherStatus,\r\n      });\r\n    } catch (e) {\r\n      alert(\"City doesnot found, try another city\");\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(pP, pS, SS) {\r\n    if (typeof pP.activities !== typeof this.props.activities) {\r\n      this.props.setDefined();\r\n    }\r\n    if (pP.defaultCity !== this.props.defaultCity) {\r\n      this.getWeather();\r\n    }\r\n  }\r\n\r\n  getActiveActivities = () => {\r\n    this.props.sortActiveActivities();\r\n  };\r\n\r\n  getNonActiveActivities = () => {\r\n    this.props.sortNonActiveActivities();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Daily Activities</h1>\r\n        <div className=\"container\">\r\n          <div className=\"child-container-1\">\r\n            <ActiveActivities />\r\n          </div>\r\n          <div className=\"child-container-2\">\r\n            <div className=\"cc-1\">\r\n              <Notifications />\r\n            </div>\r\n            <div className=\"cc-2\">\r\n              <Suggestions />\r\n            </div>\r\n            <div className=\"cc-3\">\r\n              <Archrive />\r\n            </div>\r\n          </div>\r\n          <div className=\"child-container-3\">\r\n            <Weather />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({\r\n  weather: { defaultCity },\r\n  activities: { activities },\r\n}) => ({\r\n  activities,\r\n  defaultCity,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDefined: () => dispatch(setDefined()),\r\n  setDecrementMinutes: () => dispatch(setDecrementMinutes()),\r\n  sortActiveActivities: () => dispatch(sortActiveActivities()),\r\n  getWeatherData: (weather) => dispatch(getWeatherData(weather)),\r\n  sortNonActiveActivities: () => dispatch(sortNonActiveActivities()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard);\r\n","export default {\r\n  LineThrogh: { textDecoration: \"line-through\" },\r\n  Container: { display: \"flex\", alignItems: \"center\" },\r\n  listChildOne: {\r\n    opacity: 0.5,\r\n    width: \"0.7rem\",\r\n    height: \"0.7rem\",\r\n    background: \"green\",\r\n    marginRight: \"1rem\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  listChildTwo: {\r\n    opacity: 0.5,\r\n    width: \"0.7rem\",\r\n    height: \"0.7rem\",\r\n    background: \"red\",\r\n    marginRight: \"1rem\",\r\n    borderRadius: \"50%\",\r\n  },\r\n  ButtonRoundStyle: {\r\n    opacity: 0.65,\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    display: \"flex\",\r\n    cursor: \"pointer\",\r\n    background: \"white\",\r\n    marginRight: \"1rem\",\r\n    borderRadius: \"50%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"1px solid rgba(128,128,128, 0.5)\",\r\n  },\r\n};\r\n","export const TableHeader = [\r\n  { id: 1, value: \"Activity Name\" },\r\n  { id: 2, value: \"Status\" },\r\n  { id: 3, value: \"Time Remaining\" },\r\n  { id: 4, value: \"Edit\" },\r\n  { id: 5, value: \"Delete\" },\r\n];\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ActivityStyle from \"../styles\";\r\nimport \"./checkActivities.styles.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TableHeader } from \"./tableHeader\";\r\nimport { CustomButton, EditActivityModal } from \"../../components/\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { deleteActivity, sortCheckActivities, toggleModal } from \"../../redux/\";\r\n\r\nconst CheckActivity = ({\r\n  sortCheckActivities,\r\n  deleteActivity,\r\n  toggleModal,\r\n  activities,\r\n  showModal,\r\n}) => {\r\n  return (\r\n    <DragDropContext onDragEnd={(value) => sortCheckActivities(value)}>\r\n      <div>\r\n        <h2>All activities - total {activities.length} rows</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {TableHeader.map(({ id, value }) => (\r\n                <th key={id}>{value}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          {activities.length > 0 ? (\r\n            <Droppable droppableId=\"activities\">\r\n              {(provided) => (\r\n                <tbody {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {activities.map((ac, index) => (\r\n                    <Draggable key={ac.id} index={index} draggableId={ac.id}>\r\n                      {(provided) => (\r\n                        <tr\r\n                          key={ac.id}\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          {ac.completed ? (\r\n                            <td style={ActivityStyle.LineThrogh}>{ac.name}</td>\r\n                          ) : (\r\n                            <td>{ac.name}</td>\r\n                          )}\r\n                          <td>\r\n                            {ac.completed ? (\r\n                              <>\r\n                                <div style={ActivityStyle.Container}>\r\n                                  <div style={ActivityStyle.listChildOne}></div>\r\n                                  <span>Task accomplished</span>\r\n                                </div>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <div style={ActivityStyle.Container}>\r\n                                  <div style={ActivityStyle.listChildTwo}></div>\r\n                                  <span>Task ongoing</span>\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {ac.timeSet ? (\r\n                              <>\r\n                                {ac.timeSet > 1 ? (\r\n                                  <span>{ac.timeSet} minutes</span>\r\n                                ) : (\r\n                                  <span>{ac.timeSet} minute</span>\r\n                                )}\r\n                              </>\r\n                            ) : (\r\n                              <span>0 minute</span>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <div\r\n                              style={ActivityStyle.ButtonRoundStyle}\r\n                              onClick={() =>\r\n                                toggleModal({\r\n                                  setId: ac.id,\r\n                                  showModal: !showModal,\r\n                                  setValidTime: ac.timeSet,\r\n                                  setCompleted: ac.completed,\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"fas fa-pen\"></i>\r\n                            </div>\r\n                            <EditActivityModal />\r\n                          </td>\r\n                          <td>\r\n                            <div\r\n                              style={ActivityStyle.ButtonRoundStyle}\r\n                              onClick={() => deleteActivity(ac.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\"></i>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </tbody>\r\n              )}\r\n            </Droppable>\r\n          ) : null}\r\n        </table>\r\n        {activities.length === 0 ? (\r\n          <div>\r\n            <p>No activites yet.</p>\r\n            <Link to={{ pathname: \"/Activity-App/create\" }}>\r\n              <CustomButton>Add Activity</CustomButton>\r\n            </Link>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { showModal, activities } }) => ({\r\n  showModal,\r\n  activities,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleModal: (activity) => dispatch(toggleModal(activity)),\r\n  deleteActivity: (activity) => dispatch(deleteActivity(activity)),\r\n  sortCheckActivities: (activity) => dispatch(sortCheckActivities(activity)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckActivity);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addActivities, handleChange } from \"../../redux/\";\r\nimport { FormInput, CustomButton } from \"../../components/\";\r\n\r\nclass CreateActivity extends React.Component {\r\n  render() {\r\n    const { handleChange, setName, timeSet, addActivities } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <h1>Add an activities</h1>\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"setName\"\r\n            value={setName}\r\n            handleChange={handleChange}\r\n            label={`Give a activity name`}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"time\"\r\n            name=\"timeSet\"\r\n            value={timeSet}\r\n            handleChange={handleChange}\r\n            required\r\n          />\r\n          <CustomButton onClick={(event) => addActivities(event)}>\r\n            Add\r\n          </CustomButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Calling the state from the reducer\r\nconst mapStateToProps = ({ activities: { setName, timeSet } }) => ({\r\n  setName,\r\n  timeSet,\r\n});\r\n\r\n//Calling the methods from the reducer\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleChange: (ac) => dispatch(handleChange(ac)),\r\n  addActivities: (ac) => dispatch(addActivities(ac)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateActivity);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Header } from \"./components/\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { CreateActivity, DashBoard, CheckActivity } from \"./screen/\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/Activity-App\" component={DashBoard} />\r\n        <Route exact path=\"/Activity-App/check\" component={CheckActivity} />\r\n        <Route exact path=\"/Activity-App/create\" component={CreateActivity} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { weatherReducer, activitiesReducer } from \"./\";\r\n\r\nexport default combineReducers({\r\n  activities: activitiesReducer,\r\n  weather: weatherReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middleware = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}